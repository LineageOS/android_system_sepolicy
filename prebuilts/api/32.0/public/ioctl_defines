define(`ADD_NEW_DISK', `0x40140921')
define(`ADV7842_CMD_RAM_TEST', `0x000056c0')
define(`AGPIOC_ACQUIRE', `0x00004101')
define(`AGPIOC_ALLOCATE', `0xc0084106')
define(`AGPIOC_BIND', `0x40084108')
define(`AGPIOC_CHIPSET_FLUSH', `0x0000410a')
define(`AGPIOC_DEALLOCATE', `0x40044107')
define(`AGPIOC_INFO', `0x80084100')
define(`AGPIOC_PROTECT', `0x40084105')
define(`AGPIOC_RELEASE', `0x00004102')
define(`AGPIOC_RESERVE', `0x40084104')
define(`AGPIOC_SETUP', `0x40084103')
define(`AGPIOC_UNBIND', `0x40084109')
define(`AMDKFD_IOC_CREATE_QUEUE', `0xc0584b02')
define(`AMDKFD_IOC_DESTROY_QUEUE', `0xc0084b03')
define(`AMDKFD_IOC_GET_CLOCK_COUNTERS', `0xc0284b05')
define(`AMDKFD_IOC_GET_PROCESS_APERTURES', `0x81904b06')
define(`AMDKFD_IOC_GET_VERSION', `0x80084b01')
define(`AMDKFD_IOC_SET_MEMORY_POLICY', `0x40204b04')
define(`AMDKFD_IOC_UPDATE_QUEUE', `0x40184b07')
define(`ANDROID_ALARM_SET_RTC', `0x40106105')
define(`ANDROID_ALARM_WAIT', `0x00006101')
define(`APEI_ERST_CLEAR_RECORD', `0x40084501')
define(`APEI_ERST_GET_RECORD_COUNT', `0x80044502')
define(`APM_IOC_STANDBY', `0x00004101')
define(`APM_IOC_SUSPEND', `0x00004102')
define(`ASHMEM_GET_NAME', `0x81007702')
define(`ASHMEM_GET_PIN_STATUS', `0x00007709')
define(`ASHMEM_GET_PROT_MASK', `0x00007706')
define(`ASHMEM_GET_SIZE', `0x00007704')
define(`ASHMEM_PIN', `0x40087707')
define(`ASHMEM_PURGE_ALL_CACHES', `0x0000770a')
define(`ASHMEM_SET_NAME', `0x41007701')
define(`ASHMEM_SET_PROT_MASK', `0x40087705')
define(`ASHMEM_SET_SIZE', `0x40087703')
define(`ASHMEM_UNPIN', `0x40087708')
define(`ATM_ADDADDR', `0x40106188')
define(`ATM_ADDLECSADDR', `0x4010618e')
define(`ATM_ADDPARTY', `0x401061f4')
define(`ATMARPD_CTRL', `0x000061e1')
define(`ATMARP_ENCAP', `0x000061e5')
define(`ATMARP_MKIP', `0x000061e2')
define(`ATMARP_SETENTRY', `0x000061e3')
define(`ATM_DELADDR', `0x40106189')
define(`ATM_DELLECSADDR', `0x4010618f')
define(`ATM_DROPPARTY', `0x400461f5')
define(`ATM_GETADDR', `0x40106186')
define(`ATM_GETCIRANGE', `0x4010618a')
define(`ATM_GETESI', `0x40106185')
define(`ATM_GETLECSADDR', `0x40106190')
define(`ATM_GETLINKRATE', `0x40106181')
define(`ATM_GETLOOP', `0x40106152')
define(`ATM_GETNAMES', `0x40106183')
define(`ATM_GETSTAT', `0x40106150')
define(`ATM_GETSTATZ', `0x40106151')
define(`ATM_GETTYPE', `0x40106184')
define(`ATMLEC_CTRL', `0x000061d0')
define(`ATMLEC_DATA', `0x000061d1')
define(`ATMLEC_MCAST', `0x000061d2')
define(`ATMMPC_CTRL', `0x000061d8')
define(`ATMMPC_DATA', `0x000061d9')
define(`ATM_NEWBACKENDIF', `0x400261f3')
define(`ATM_QUERYLOOP', `0x40106154')
define(`ATM_RSTADDR', `0x40106187')
define(`ATM_SETBACKEND', `0x400261f2')
define(`ATM_SETCIRANGE', `0x4010618b')
define(`ATM_SETESI', `0x4010618c')
define(`ATM_SETESIF', `0x4010618d')
define(`ATM_SETLOOP', `0x40106153')
define(`ATM_SETSC', `0x400461f1')
define(`ATMSIGD_CTRL', `0x000061f0')
define(`ATMTCP_CREATE', `0x0000618e')
define(`ATMTCP_REMOVE', `0x0000618f')
define(`AUDIO_BILINGUAL_CHANNEL_SELECT', `0x00006f14')
define(`AUDIO_CHANNEL_SELECT', `0x00006f09')
define(`AUDIO_CLEAR_BUFFER', `0x00006f0c')
define(`AUDIO_CONTINUE', `0x00006f04')
define(`AUDIO_GET_CAPABILITIES', `0x80046f0b')
define(`AUDIO_GET_PTS', `0x80086f13')
define(`AUDIO_GET_STATUS', `0x80206f0a')
define(`AUDIO_PAUSE', `0x00006f03')
define(`AUDIO_PLAY', `0x00006f02')
define(`AUDIO_SELECT_SOURCE', `0x00006f05')
define(`AUDIO_SET_ATTRIBUTES', `0x40026f11')
define(`AUDIO_SET_AV_SYNC', `0x00006f07')
define(`AUDIO_SET_BYPASS_MODE', `0x00006f08')
define(`AUDIO_SET_EXT_ID', `0x00006f10')
define(`AUDIO_SET_ID', `0x00006f0d')
define(`AUDIO_SET_KARAOKE', `0x400c6f12')
define(`AUDIO_SET_MIXER', `0x40086f0e')
define(`AUDIO_SET_MUTE', `0x00006f06')
define(`AUDIO_SET_STREAMTYPE', `0x00006f0f')
define(`AUDIO_STOP', `0x00006f01')
define(`AUTOFS_DEV_IOCTL_ASKUMOUNT', `0xc018937d')
define(`AUTOFS_DEV_IOCTL_CATATONIC', `0xc0189379')
define(`AUTOFS_DEV_IOCTL_CLOSEMOUNT', `0xc0189375')
define(`AUTOFS_DEV_IOCTL_EXPIRE', `0xc018937c')
define(`AUTOFS_DEV_IOCTL_FAIL', `0xc0189377')
define(`AUTOFS_DEV_IOCTL_ISMOUNTPOINT', `0xc018937e')
define(`AUTOFS_DEV_IOCTL_OPENMOUNT', `0xc0189374')
define(`AUTOFS_DEV_IOCTL_PROTOSUBVER', `0xc0189373')
define(`AUTOFS_DEV_IOCTL_PROTOVER', `0xc0189372')
define(`AUTOFS_DEV_IOCTL_READY', `0xc0189376')
define(`AUTOFS_DEV_IOCTL_REQUESTER', `0xc018937b')
define(`AUTOFS_DEV_IOCTL_SETPIPEFD', `0xc0189378')
define(`AUTOFS_DEV_IOCTL_TIMEOUT', `0xc018937a')
define(`AUTOFS_DEV_IOCTL_VERSION', `0xc0189371')
define(`AUTOFS_IOC_ASKUMOUNT', `0x80049370')
define(`AUTOFS_IOC_CATATONIC', `0x00009362')
define(`AUTOFS_IOC_EXPIRE', `0x810c9365')
define(`AUTOFS_IOC_EXPIRE_MULTI', `0x40049366')
define(`AUTOFS_IOC_FAIL', `0x00009361')
define(`AUTOFS_IOC_PROTOSUBVER', `0x80049367')
define(`AUTOFS_IOC_PROTOVER', `0x80049363')
define(`AUTOFS_IOC_READY', `0x00009360')
define(`AUTOFS_IOC_SETTIMEOUT', `0xc0089364')
define(`AUTOFS_IOC_SETTIMEOUT32', `0xc0049364')
define(`BC_ACQUIRE', `0x40046305')
define(`BC_ACQUIRE_DONE', `0x40106309')
define(`BC_ACQUIRE_RESULT', `0x40046302')
define(`BC_ATTEMPT_ACQUIRE', `0x4008630a')
define(`BC_CLEAR_DEATH_NOTIFICATION', `0x400c630f')
define(`BC_DEAD_BINDER_DONE', `0x40086310')
define(`BC_DECREFS', `0x40046307')
define(`BC_ENTER_LOOPER', `0x0000630c')
define(`BC_EXIT_LOOPER', `0x0000630d')
define(`BC_FREE_BUFFER', `0x40086303')
define(`BC_INCREFS', `0x40046304')
define(`BC_INCREFS_DONE', `0x40106308')
define(`BC_REGISTER_LOOPER', `0x0000630b')
define(`BC_RELEASE', `0x40046306')
define(`BC_REPLY', `0x40406301')
define(`BC_REQUEST_DEATH_NOTIFICATION', `0x400c630e')
define(`BC_TRANSACTION', `0x40406300')
define(`BINDER_ENABLE_ONEWAY_SPAM_DETECTION', `0x40046210')
define(`BINDER_FREEZE', `0x400c620e')
define(`BINDER_GET_FROZEN_INFO', `0xc00c620f')
define(`BINDER_GET_NODE_DEBUG_INFO', `0xc018620b')
define(`BINDER_GET_NODE_INFO_FOR_REF', `0xc018620c')
define(`BINDER_SET_CONTEXT_MGR', `0x40046207')
define(`BINDER_SET_CONTEXT_MGR_EXT', `0x4018620d')
define(`BINDER_SET_IDLE_PRIORITY', `0x40046206')
define(`BINDER_SET_IDLE_TIMEOUT', `0x40086203')
define(`BINDER_SET_MAX_THREADS', `0x40046205')
define(`BINDER_THREAD_EXIT', `0x40046208')
define(`BINDER_VERSION', `0xc0046209')
define(`BINDER_WRITE_READ', `0xc0306201')
define(`BLKALIGNOFF', `0x0000127a')
define(`BLKBSZGET', `0x80081270')
define(`BLKBSZSET', `0x40081271')
define(`BLKDISCARD', `0x00001277')
define(`BLKDISCARDZEROES', `0x0000127c')
define(`BLKFLSBUF', `0x00001261')
define(`BLKFRAGET', `0x00001265')
define(`BLKFRASET', `0x00001264')
define(`BLKGETSIZE', `0x00001260')
define(`BLKGETSIZE64', `0x80081272')
define(`BLKI2OGRSTRAT', `0x80043201')
define(`BLKI2OGWSTRAT', `0x80043202')
define(`BLKI2OSRSTRAT', `0x40043203')
define(`BLKI2OSWSTRAT', `0x40043204')
define(`BLKIOMIN', `0x00001278')
define(`BLKIOOPT', `0x00001279')
define(`BLKPBSZGET', `0x0000127b')
define(`BLKPG', `0x00001269')
define(`BLKRAGET', `0x00001263')
define(`BLKRASET', `0x00001262')
define(`BLKROGET', `0x0000125e')
define(`BLKROSET', `0x0000125d')
define(`BLKROTATIONAL', `0x0000127e')
define(`BLKRRPART', `0x0000125f')
define(`BLKSECDISCARD', `0x0000127d')
define(`BLKSECTGET', `0x00001267')
define(`BLKSECTSET', `0x00001266')
define(`BLKSSZGET', `0x00001268')
define(`BLKTRACESETUP', `0xc0481273')
define(`BLKTRACESTART', `0x00001274')
define(`BLKTRACESTOP', `0x00001275')
define(`BLKTRACETEARDOWN', `0x00001276')
define(`BLKZEROOUT', `0x0000127f')
define(`BR2684_SETFILT', `0x401c6190')
define(`BR_ACQUIRE', `0x80107208')
define(`BR_ACQUIRE_RESULT', `0x80047204')
define(`BR_ATTEMPT_ACQUIRE', `0x8018720b')
define(`BR_CLEAR_DEATH_NOTIFICATION_DONE', `0x80087210')
define(`BR_DEAD_BINDER', `0x8008720f')
define(`BR_DEAD_REPLY', `0x00007205')
define(`BR_DECREFS', `0x8010720a')
define(`BR_ERROR', `0x80047200')
define(`BR_FAILED_REPLY', `0x00007211')
define(`BR_FINISHED', `0x0000720e')
define(`BR_INCREFS', `0x80107207')
define(`BR_NOOP', `0x0000720c')
define(`BR_OK', `0x00007201')
define(`BR_ONEWAY_SPAM_SUSPECT', `0x00007213')
define(`BR_RELEASE', `0x80107209')
define(`BR_REPLY', `0x80407203')
define(`BR_SPAWN_LOOPER', `0x0000720d')
define(`BR_TRANSACTION', `0x80407202')
define(`BR_TRANSACTION_COMPLETE', `0x00007206')
define(`BT819_FIFO_RESET_HIGH', `0x00006201')
define(`BT819_FIFO_RESET_LOW', `0x00006200')
define(`BTRFS_IOC_ADD_DEV', `0x5000940a')
define(`BTRFS_IOC_BALANCE', `0x5000940c')
define(`BTRFS_IOC_BALANCE_CTL', `0x40049421')
define(`BTRFS_IOC_BALANCE_PROGRESS', `0x84009422')
define(`BTRFS_IOC_BALANCE_V2', `0xc4009420')
define(`BTRFS_IOC_CLONE', `0x40049409')
define(`BTRFS_IOC_CLONE_RANGE', `0x4020940d')
define(`BTRFS_IOC_DEFAULT_SUBVOL', `0x40089413')
define(`BTRFS_IOC_DEFRAG', `0x50009402')
define(`BTRFS_IOC_DEFRAG_RANGE', `0x40309410')
define(`BTRFS_IOC_DEVICES_READY', `0x90009427')
define(`BTRFS_IOC_DEV_INFO', `0xd000941e')
define(`BTRFS_IOC_DEV_REPLACE', `0xca289435')
define(`BTRFS_IOC_FILE_EXTENT_SAME', `0xc0189436')
define(`BTRFS_IOC_FS_INFO', `0x8400941f')
define(`BTRFS_IOC_GET_DEV_STATS', `0xc4089434')
define(`BTRFS_IOC_GET_FEATURES', `0x80189439')
define(`BTRFS_IOC_GET_FSLABEL', `0x81009431')
define(`BTRFS_IOC_GET_SUPPORTED_FEATURES', `0x80489439')
define(`BTRFS_IOC_INO_LOOKUP', `0xd0009412')
define(`BTRFS_IOC_INO_PATHS', `0xc0389423')
define(`BTRFS_IOC_LOGICAL_INO', `0xc0389424')
define(`BTRFS_IOC_QGROUP_ASSIGN', `0x40189429')
define(`BTRFS_IOC_QGROUP_CREATE', `0x4010942a')
define(`BTRFS_IOC_QGROUP_LIMIT', `0x8030942b')
define(`BTRFS_IOC_QUOTA_CTL', `0xc0109428')
define(`BTRFS_IOC_QUOTA_RESCAN', `0x4040942c')
define(`BTRFS_IOC_QUOTA_RESCAN_STATUS', `0x8040942d')
define(`BTRFS_IOC_QUOTA_RESCAN_WAIT', `0x0000942e')
define(`BTRFS_IOC_RESIZE', `0x50009403')
define(`BTRFS_IOC_RM_DEV', `0x5000940b')
define(`BTRFS_IOC_SCAN_DEV', `0x50009404')
define(`BTRFS_IOC_SCRUB', `0xc400941b')
define(`BTRFS_IOC_SCRUB_CANCEL', `0x0000941c')
define(`BTRFS_IOC_SCRUB_PROGRESS', `0xc400941d')
define(`BTRFS_IOC_SEND', `0x40489426')
define(`BTRFS_IOC_SET_FEATURES', `0x40309439')
define(`BTRFS_IOC_SET_FSLABEL', `0x41009432')
define(`BTRFS_IOC_SET_RECEIVED_SUBVOL', `0xc0c89425')
define(`BTRFS_IOC_SNAP_CREATE', `0x50009401')
define(`BTRFS_IOC_SNAP_CREATE_V2', `0x50009417')
define(`BTRFS_IOC_SNAP_DESTROY', `0x5000940f')
define(`BTRFS_IOC_SPACE_INFO', `0xc0109414')
define(`BTRFS_IOC_START_SYNC', `0x80089418')
define(`BTRFS_IOC_SUBVOL_CREATE', `0x5000940e')
define(`BTRFS_IOC_SUBVOL_CREATE_V2', `0x50009418')
define(`BTRFS_IOC_SUBVOL_GETFLAGS', `0x80089419')
define(`BTRFS_IOC_SUBVOL_SETFLAGS', `0x4008941a')
define(`BTRFS_IOC_SYNC', `0x00009408')
define(`BTRFS_IOC_TRANS_END', `0x00009407')
define(`BTRFS_IOC_TRANS_START', `0x00009406')
define(`BTRFS_IOC_TREE_SEARCH', `0xd0009411')
define(`BTRFS_IOC_TREE_SEARCH_V2', `0xc0709411')
define(`BTRFS_IOC_WAIT_SYNC', `0x40089416')
define(`CA_GET_CAP', `0x80106f81')
define(`CA_GET_DESCR_INFO', `0x80086f83')
define(`CA_GET_MSG', `0x810c6f84')
define(`CA_GET_SLOT_INFO', `0x800c6f82')
define(`CAPI_CLR_FLAGS', `0x80044325')
define(`CAPI_GET_ERRCODE', `0x80024321')
define(`CAPI_GET_FLAGS', `0x80044323')
define(`CAPI_GET_MANUFACTURER', `0xc0044306')
define(`CAPI_GET_PROFILE', `0xc0404309')
define(`CAPI_GET_SERIAL', `0xc0044308')
define(`CAPI_GET_VERSION', `0xc0104307')
define(`CAPI_INSTALLED', `0x80024322')
define(`CAPI_MANUFACTURER_CMD', `0xc0104320')
define(`CAPI_NCCI_GETUNIT', `0x80044327')
define(`CAPI_NCCI_OPENCOUNT', `0x80044326')
define(`CAPI_REGISTER', `0x400c4301')
define(`CAPI_SET_FLAGS', `0x80044324')
define(`CA_RESET', `0x00006f80')
define(`CA_SEND_MSG', `0x410c6f85')
define(`CA_SET_DESCR', `0x40106f86')
define(`CA_SET_PID', `0x40086f87')
define(`CCISS_BIG_PASSTHRU', `0xc0604212')
define(`CCISS_DEREGDISK', `0x0000420c')
define(`CCISS_GETBUSTYPES', `0x80044207')
define(`CCISS_GETDRIVVER', `0x80044209')
define(`CCISS_GETFIRMVER', `0x80044208')
define(`CCISS_GETHEARTBEAT', `0x80044206')
define(`CCISS_GETINTINFO', `0x80084202')
define(`CCISS_GETLUNINFO', `0x800c4211')
define(`CCISS_GETNODENAME', `0x80104204')
define(`CCISS_GETPCIINFO', `0x80084201')
define(`CCISS_PASSTHRU', `0xc058420b')
define(`CCISS_REGNEWD', `0x0000420e')
define(`CCISS_REGNEWDISK', `0x4004420d')
define(`CCISS_RESCANDISK', `0x00004210')
define(`CCISS_REVALIDVOLS', `0x0000420a')
define(`CCISS_SETINTINFO', `0x40084203')
define(`CCISS_SETNODENAME', `0x40104205')
define(`CDROMAUDIOBUFSIZ', `0x00005382')
define(`CDROM_CHANGER_NSLOTS', `0x00005328')
define(`CDROM_CLEAR_OPTIONS', `0x00005321')
define(`CDROMCLOSETRAY', `0x00005319')
define(`CDROM_DEBUG', `0x00005330')
define(`CDROM_DISC_STATUS', `0x00005327')
define(`CDROM_DRIVE_STATUS', `0x00005326')
define(`CDROMEJECT', `0x00005309')
define(`CDROMEJECT_SW', `0x0000530f')
define(`CDROM_GET_CAPABILITY', `0x00005331')
define(`CDROM_GET_MCN', `0x00005311')
define(`CDROMGETSPINDOWN', `0x0000531d')
define(`CDROM_LAST_WRITTEN', `0x00005395')
define(`CDROM_LOCKDOOR', `0x00005329')
define(`CDROM_MEDIA_CHANGED', `0x00005325')
define(`CDROMMULTISESSION', `0x00005310')
define(`CDROM_NEXT_WRITABLE', `0x00005394')
define(`CDROMPAUSE', `0x00005301')
define(`CDROMPLAYBLK', `0x00005317')
define(`CDROMPLAYMSF', `0x00005303')
define(`CDROMPLAYTRKIND', `0x00005304')
define(`CDROMREADALL', `0x00005318')
define(`CDROMREADAUDIO', `0x0000530e')
define(`CDROMREADCOOKED', `0x00005315')
define(`CDROMREADMODE1', `0x0000530d')
define(`CDROMREADMODE2', `0x0000530c')
define(`CDROMREADRAW', `0x00005314')
define(`CDROMREADTOCENTRY', `0x00005306')
define(`CDROMREADTOCHDR', `0x00005305')
define(`CDROMRESET', `0x00005312')
define(`CDROMRESUME', `0x00005302')
define(`CDROMSEEK', `0x00005316')
define(`CDROM_SELECT_DISC', `0x00005323')
define(`CDROM_SELECT_SPEED', `0x00005322')
define(`CDROM_SEND_PACKET', `0x00005393')
define(`CDROM_SET_OPTIONS', `0x00005320')
define(`CDROMSETSPINDOWN', `0x0000531e')
define(`CDROMSTART', `0x00005308')
define(`CDROMSTOP', `0x00005307')
define(`CDROMSUBCHNL', `0x0000530b')
define(`CDROMVOLCTRL', `0x0000530a')
define(`CDROMVOLREAD', `0x00005313')
define(`CHIOEXCHANGE', `0x401c6302')
define(`CHIOGELEM', `0x406c6310')
define(`CHIOGPARAMS', `0x80146306')
define(`CHIOGPICKER', `0x80046304')
define(`CHIOGSTATUS', `0x40106308')
define(`CHIOGVPARAMS', `0x80706313')
define(`CHIOINITELEM', `0x00006311')
define(`CHIOMOVE', `0x40146301')
define(`CHIOPOSITION', `0x400c6303')
define(`CHIOSPICKER', `0x40046305')
define(`CHIOSVOLTAG', `0x40306312')
define(`CIOC_KERNEL_VERSION', `0xc008630a')
define(`CLEAR_ARRAY', `0x00000920')
define(`CM_IOCARDOFF', `0x00006304')
define(`CM_IOCGATR', `0xc0086301')
define(`CM_IOCGSTATUS', `0x80086300')
define(`CM_IOCSPTS', `0x40086302')
define(`CM_IOCSRDR', `0x00006303')
define(`CM_IOSDBGLVL', `0x400863fa')
define(`CXL_IOCTL_GET_PROCESS_ELEMENT', `0x8004ca01')
define(`CXL_IOCTL_START_WORK', `0x4040ca00')
define(`DM_DEV_CREATE', `0xc138fd03')
define(`DM_DEV_REMOVE', `0xc138fd04')
define(`DM_DEV_RENAME', `0xc138fd05')
define(`DM_DEV_SET_GEOMETRY', `0xc138fd0f')
define(`DM_DEV_STATUS', `0xc138fd07')
define(`DM_DEV_SUSPEND', `0xc138fd06')
define(`DM_DEV_WAIT', `0xc138fd08')
define(`DM_LIST_DEVICES', `0xc138fd02')
define(`DM_LIST_VERSIONS', `0xc138fd0d')
define(`DM_REMOVE_ALL', `0xc138fd01')
define(`DM_TABLE_CLEAR', `0xc138fd0a')
define(`DM_TABLE_DEPS', `0xc138fd0b')
define(`DM_TABLE_LOAD', `0xc138fd09')
define(`DM_TABLE_STATUS', `0xc138fd0c')
define(`DM_TARGET_MSG', `0xc138fd0e')
define(`DM_VERSION', `0xc138fd00')
define(`DMX_ADD_PID', `0x40026f33')
define(`DMX_GET_CAPS', `0x80086f30')
define(`DMX_GET_PES_PIDS', `0x800a6f2f')
define(`DMX_GET_STC', `0xc0106f32')
define(`DMX_REMOVE_PID', `0x40026f34')
define(`DMX_SET_BUFFER_SIZE', `0x00006f2d')
define(`DMX_SET_FILTER', `0x403c6f2b')
define(`DMX_SET_PES_FILTER', `0x40146f2c')
define(`DMX_SET_SOURCE', `0x40046f31')
define(`DMX_START', `0x00006f29')
define(`DMX_STOP', `0x00006f2a')
define(`DRM_IOCTL_ADD_BUFS', `0xc0206416')
define(`DRM_IOCTL_ADD_CTX', `0xc0086420')
define(`DRM_IOCTL_ADD_DRAW', `0xc0046427')
define(`DRM_IOCTL_ADD_MAP', `0xc0286415')
define(`DRM_IOCTL_AGP_ACQUIRE', `0x00006430')
define(`DRM_IOCTL_AGP_ALLOC', `0xc0206434')
define(`DRM_IOCTL_AGP_BIND', `0x40106436')
define(`DRM_IOCTL_AGP_ENABLE', `0x40086432')
define(`DRM_IOCTL_AGP_FREE', `0x40206435')
define(`DRM_IOCTL_AGP_INFO', `0x80386433')
define(`DRM_IOCTL_AGP_RELEASE', `0x00006431')
define(`DRM_IOCTL_AGP_UNBIND', `0x40106437')
define(`DRM_IOCTL_AUTH_MAGIC', `0x40046411')
define(`DRM_IOCTL_BLOCK', `0xc0046412')
define(`DRM_IOCTL_CONTROL', `0x40086414')
define(`DRM_IOCTL_DMA', `0xc0406429')
define(`DRM_IOCTL_DROP_MASTER', `0x0000641f')
define(`DRM_IOCTL_EXYNOS_G2D_EXEC', `0xc0086462')
define(`DRM_IOCTL_EXYNOS_G2D_GET_VER', `0xc0086460')
define(`DRM_IOCTL_EXYNOS_G2D_SET_CMDLIST', `0xc0286461')
define(`DRM_IOCTL_EXYNOS_GEM_CREATE', `0xc0106440')
define(`DRM_IOCTL_EXYNOS_GEM_GET', `0xc0106444')
define(`DRM_IOCTL_EXYNOS_IPP_CMD_CTRL', `0xc0086473')
define(`DRM_IOCTL_EXYNOS_IPP_GET_PROPERTY', `0xc0506470')
define(`DRM_IOCTL_EXYNOS_IPP_QUEUE_BUF', `0xc0286472')
define(`DRM_IOCTL_EXYNOS_IPP_SET_PROPERTY', `0xc0606471')
define(`DRM_IOCTL_EXYNOS_VIDI_CONNECTION', `0xc0106447')
define(`DRM_IOCTL_FINISH', `0x4008642c')
define(`DRM_IOCTL_FREE_BUFS', `0x4010641a')
define(`DRM_IOCTL_GEM_CLOSE', `0x40086409')
define(`DRM_IOCTL_GEM_FLINK', `0xc008640a')
define(`DRM_IOCTL_GEM_OPEN', `0xc010640b')
define(`DRM_IOCTL_GET_CAP', `0xc010640c')
define(`DRM_IOCTL_GET_CLIENT', `0xc0286405')
define(`DRM_IOCTL_GET_CTX', `0xc0086423')
define(`DRM_IOCTL_GET_MAGIC', `0x80046402')
define(`DRM_IOCTL_GET_MAP', `0xc0286404')
define(`DRM_IOCTL_GET_SAREA_CTX', `0xc010641d')
define(`DRM_IOCTL_GET_STATS', `0x80f86406')
define(`DRM_IOCTL_GET_UNIQUE', `0xc0106401')
define(`DRM_IOCTL_I810_CLEAR', `0x400c6442')
define(`DRM_IOCTL_I810_COPY', `0x40106447')
define(`DRM_IOCTL_I810_DOCOPY', `0x00006448')
define(`DRM_IOCTL_I810_FLIP', `0x0000644e')
define(`DRM_IOCTL_I810_FLUSH', `0x00006443')
define(`DRM_IOCTL_I810_FSTATUS', `0x0000644a')
define(`DRM_IOCTL_I810_GETAGE', `0x00006444')
define(`DRM_IOCTL_I810_GETBUF', `0xc0186445')
define(`DRM_IOCTL_I810_INIT', `0x40406440')
define(`DRM_IOCTL_I810_MC', `0x4020644c')
define(`DRM_IOCTL_I810_OV0FLIP', `0x0000644b')
define(`DRM_IOCTL_I810_OV0INFO', `0x80086449')
define(`DRM_IOCTL_I810_RSTATUS', `0x0000644d')
define(`DRM_IOCTL_I810_SWAP', `0x00006446')
define(`DRM_IOCTL_I810_VERTEX', `0x400c6441')
define(`DRM_IOCTL_I915_ALLOC', `0xc0186448')
define(`DRM_IOCTL_I915_BATCHBUFFER', `0x40206443')
define(`DRM_IOCTL_I915_CMDBUFFER', `0x4020644b')
define(`DRM_IOCTL_I915_DESTROY_HEAP', `0x4004644c')
define(`DRM_IOCTL_I915_FLIP', `0x00006442')
define(`DRM_IOCTL_I915_FLUSH', `0x00006441')
define(`DRM_IOCTL_I915_FREE', `0x40086449')
define(`DRM_IOCTL_I915_GEM_BUSY', `0xc0086457')
define(`DRM_IOCTL_I915_GEM_CONTEXT_CREATE', `0xc008646d')
define(`DRM_IOCTL_I915_GEM_CONTEXT_DESTROY', `0x4008646e')
define(`DRM_IOCTL_I915_GEM_CREATE', `0xc010645b')
define(`DRM_IOCTL_I915_GEM_ENTERVT', `0x00006459')
define(`DRM_IOCTL_I915_GEM_EXECBUFFER', `0x40286454')
define(`DRM_IOCTL_I915_GEM_EXECBUFFER2', `0x40406469')
define(`DRM_IOCTL_I915_GEM_GET_APERTURE', `0x80106463')
define(`DRM_IOCTL_I915_GEM_GET_CACHING', `0xc0086470')
define(`DRM_IOCTL_I915_GEM_GET_TILING', `0xc0106462')
define(`DRM_IOCTL_I915_GEM_INIT', `0x40106453')
define(`DRM_IOCTL_I915_GEM_LEAVEVT', `0x0000645a')
define(`DRM_IOCTL_I915_GEM_MADVISE', `0xc00c6466')
define(`DRM_IOCTL_I915_GEM_MMAP', `0xc020645e')
define(`DRM_IOCTL_I915_GEM_MMAP_GTT', `0xc0106464')
define(`DRM_IOCTL_I915_GEM_PIN', `0xc0186455')
define(`DRM_IOCTL_I915_GEM_PREAD', `0x4020645c')
define(`DRM_IOCTL_I915_GEM_PWRITE', `0x4020645d')
define(`DRM_IOCTL_I915_GEM_SET_CACHING', `0x4008646f')
define(`DRM_IOCTL_I915_GEM_SET_DOMAIN', `0x400c645f')
define(`DRM_IOCTL_I915_GEM_SET_TILING', `0xc0106461')
define(`DRM_IOCTL_I915_GEM_SW_FINISH', `0x40046460')
define(`DRM_IOCTL_I915_GEM_THROTTLE', `0x00006458')
define(`DRM_IOCTL_I915_GEM_UNPIN', `0x40086456')
define(`DRM_IOCTL_I915_GEM_USERPTR', `0xc0186473')
define(`DRM_IOCTL_I915_GEM_WAIT', `0xc010646c')
define(`DRM_IOCTL_I915_GETPARAM', `0xc0106446')
define(`DRM_IOCTL_I915_GET_PIPE_FROM_CRTC_ID', `0xc0086465')
define(`DRM_IOCTL_I915_GET_RESET_STATS', `0xc0186472')
define(`DRM_IOCTL_I915_GET_SPRITE_COLORKEY', `0xc014646b')
define(`DRM_IOCTL_I915_GET_VBLANK_PIPE', `0x8004644e')
define(`DRM_IOCTL_I915_HWS_ADDR', `0x40106451')
define(`DRM_IOCTL_I915_INIT', `0x40446440')
define(`DRM_IOCTL_I915_INIT_HEAP', `0x400c644a')
define(`DRM_IOCTL_I915_IRQ_EMIT', `0xc0086444')
define(`DRM_IOCTL_I915_IRQ_WAIT', `0x40046445')
define(`DRM_IOCTL_I915_OVERLAY_ATTRS', `0xc02c6468')
define(`DRM_IOCTL_I915_OVERLAY_PUT_IMAGE', `0x402c6467')
define(`DRM_IOCTL_I915_REG_READ', `0xc0106471')
define(`DRM_IOCTL_I915_SETPARAM', `0x40086447')
define(`DRM_IOCTL_I915_SET_SPRITE_COLORKEY', `0xc014646b')
define(`DRM_IOCTL_I915_SET_VBLANK_PIPE', `0x4004644d')
define(`DRM_IOCTL_I915_VBLANK_SWAP', `0xc00c644f')
define(`DRM_IOCTL_INFO_BUFS', `0xc0106418')
define(`DRM_IOCTL_IRQ_BUSID', `0xc0106403')
define(`DRM_IOCTL_LOCK', `0x4008642a')
define(`DRM_IOCTL_MAP_BUFS', `0xc0186419')
define(`DRM_IOCTL_MARK_BUFS', `0x40206417')
define(`DRM_IOCTL_MGA_BLIT', `0x40346448')
define(`DRM_IOCTL_MGA_CLEAR', `0x40146444')
define(`DRM_IOCTL_MGA_DMA_BOOTSTRAP', `0xc020644c')
define(`DRM_IOCTL_MGA_FLUSH', `0x40086441')
define(`DRM_IOCTL_MGA_GETPARAM', `0xc0106449')
define(`DRM_IOCTL_MGA_ILOAD', `0x400c6447')
define(`DRM_IOCTL_MGA_INDICES', `0x40106446')
define(`DRM_IOCTL_MGA_INIT', `0x40806440')
define(`DRM_IOCTL_MGA_RESET', `0x00006442')
define(`DRM_IOCTL_MGA_SET_FENCE', `0x4004644a')
define(`DRM_IOCTL_MGA_SWAP', `0x00006443')
define(`DRM_IOCTL_MGA_VERTEX', `0x400c6445')
define(`DRM_IOCTL_MGA_WAIT_FENCE', `0xc004644b')
define(`DRM_IOCTL_MOD_CTX', `0x40086422')
define(`DRM_IOCTL_MODE_ADDFB', `0xc01c64ae')
define(`DRM_IOCTL_MODE_ADDFB2', `0xc04464b8')
define(`DRM_IOCTL_MODE_ATTACHMODE', `0xc04864a8')
define(`DRM_IOCTL_MODE_CREATE_DUMB', `0xc02064b2')
define(`DRM_IOCTL_MODE_CURSOR', `0xc01c64a3')
define(`DRM_IOCTL_MODE_CURSOR2', `0xc02464bb')
define(`DRM_IOCTL_MODE_DESTROY_DUMB', `0xc00464b4')
define(`DRM_IOCTL_MODE_DETACHMODE', `0xc04864a9')
define(`DRM_IOCTL_MODE_DIRTYFB', `0xc01864b1')
define(`DRM_IOCTL_MODE_GETCONNECTOR', `0xc05064a7')
define(`DRM_IOCTL_MODE_GETCRTC', `0xc06864a1')
define(`DRM_IOCTL_MODE_GETENCODER', `0xc01464a6')
define(`DRM_IOCTL_MODE_GETFB', `0xc01c64ad')
define(`DRM_IOCTL_MODE_GETGAMMA', `0xc02064a4')
define(`DRM_IOCTL_MODE_GETPLANE', `0xc02064b6')
define(`DRM_IOCTL_MODE_GETPLANERESOURCES', `0xc01064b5')
define(`DRM_IOCTL_MODE_GETPROPBLOB', `0xc01064ac')
define(`DRM_IOCTL_MODE_GETPROPERTY', `0xc04064aa')
define(`DRM_IOCTL_MODE_GETRESOURCES', `0xc04064a0')
define(`DRM_IOCTL_MODE_MAP_DUMB', `0xc01064b3')
define(`DRM_IOCTL_MODE_OBJ_GETPROPERTIES', `0xc02064b9')
define(`DRM_IOCTL_MODE_OBJ_SETPROPERTY', `0xc01864ba')
define(`DRM_IOCTL_MODE_PAGE_FLIP', `0xc01864b0')
define(`DRM_IOCTL_MODE_RMFB', `0xc00464af')
define(`DRM_IOCTL_MODE_SETCRTC', `0xc06864a2')
define(`DRM_IOCTL_MODESET_CTL', `0x40086408')
define(`DRM_IOCTL_MODE_SETGAMMA', `0xc02064a5')
define(`DRM_IOCTL_MODE_SETPLANE', `0xc03064b7')
define(`DRM_IOCTL_MODE_SETPROPERTY', `0xc01064ab')
define(`DRM_IOCTL_MSM_GEM_CPU_FINI', `0x40046445')
define(`DRM_IOCTL_MSM_GEM_CPU_PREP', `0x40186444')
define(`DRM_IOCTL_MSM_GEM_INFO', `0xc0106443')
define(`DRM_IOCTL_MSM_GEM_NEW', `0xc0106442')
define(`DRM_IOCTL_MSM_GEM_SUBMIT', `0xc0206446')
define(`DRM_IOCTL_MSM_GET_PARAM', `0xc0106440')
define(`DRM_IOCTL_MSM_WAIT_FENCE', `0x40186447')
define(`DRM_IOCTL_NEW_CTX', `0x40086425')
define(`DRM_IOCTL_NOUVEAU_GEM_CPU_FINI', `0x40046483')
define(`DRM_IOCTL_NOUVEAU_GEM_CPU_PREP', `0x40086482')
define(`DRM_IOCTL_NOUVEAU_GEM_INFO', `0xc0286484')
define(`DRM_IOCTL_NOUVEAU_GEM_NEW', `0xc0306480')
define(`DRM_IOCTL_NOUVEAU_GEM_PUSHBUF', `0xc0406481')
define(`DRM_IOCTL_OMAP_GEM_CPU_FINI', `0x40106445')
define(`DRM_IOCTL_OMAP_GEM_CPU_PREP', `0x40086444')
define(`DRM_IOCTL_OMAP_GEM_INFO', `0xc0186446')
define(`DRM_IOCTL_OMAP_GEM_NEW', `0xc0106443')
define(`DRM_IOCTL_OMAP_GET_PARAM', `0xc0106440')
define(`DRM_IOCTL_OMAP_SET_PARAM', `0x40106441')
define(`DRM_IOCTL_PRIME_FD_TO_HANDLE', `0xc00c642e')
define(`DRM_IOCTL_PRIME_HANDLE_TO_FD', `0xc00c642d')
define(`DRM_IOCTL_QXL_ALLOC', `0xc0086440')
define(`DRM_IOCTL_QXL_ALLOC_SURF', `0xc0186446')
define(`DRM_IOCTL_QXL_CLIENTCAP', `0x40086445')
define(`DRM_IOCTL_QXL_EXECBUFFER', `0x40106442')
define(`DRM_IOCTL_QXL_GETPARAM', `0xc0106444')
define(`DRM_IOCTL_QXL_MAP', `0xc0106441')
define(`DRM_IOCTL_QXL_UPDATE_AREA', `0x40186443')
define(`DRM_IOCTL_R128_BLIT', `0x4018644b')
define(`DRM_IOCTL_R128_CCE_IDLE', `0x00006444')
define(`DRM_IOCTL_R128_CCE_RESET', `0x00006443')
define(`DRM_IOCTL_R128_CCE_START', `0x00006441')
define(`DRM_IOCTL_R128_CCE_STOP', `0x40086442')
define(`DRM_IOCTL_R128_CLEAR', `0x40146448')
define(`DRM_IOCTL_R128_DEPTH', `0x4028644c')
define(`DRM_IOCTL_R128_FLIP', `0x00006453')
define(`DRM_IOCTL_R128_FULLSCREEN', `0x40046450')
define(`DRM_IOCTL_R128_GETPARAM', `0xc0106452')
define(`DRM_IOCTL_R128_INDICES', `0x4014644a')
define(`DRM_IOCTL_R128_INDIRECT', `0xc010644f')
define(`DRM_IOCTL_R128_INIT', `0x40786440')
define(`DRM_IOCTL_R128_RESET', `0x00006446')
define(`DRM_IOCTL_R128_STIPPLE', `0x4008644d')
define(`DRM_IOCTL_R128_SWAP', `0x00006447')
define(`DRM_IOCTL_R128_VERTEX', `0x40106449')
define(`DRM_IOCTL_RADEON_ALLOC', `0xc0186453')
define(`DRM_IOCTL_RADEON_CLEAR', `0x40206448')
define(`DRM_IOCTL_RADEON_CMDBUF', `0x40206450')
define(`DRM_IOCTL_RADEON_CP_IDLE', `0x00006444')
define(`DRM_IOCTL_RADEON_CP_INIT', `0x40786440')
define(`DRM_IOCTL_RADEON_CP_RESET', `0x00006443')
define(`DRM_IOCTL_RADEON_CP_RESUME', `0x00006458')
define(`DRM_IOCTL_RADEON_CP_START', `0x00006441')
define(`DRM_IOCTL_RADEON_CP_STOP', `0x40086442')
define(`DRM_IOCTL_RADEON_CS', `0xc0206466')
define(`DRM_IOCTL_RADEON_FLIP', `0x00006452')
define(`DRM_IOCTL_RADEON_FREE', `0x40086454')
define(`DRM_IOCTL_RADEON_FULLSCREEN', `0x40046446')
define(`DRM_IOCTL_RADEON_GEM_BUSY', `0xc008646a')
define(`DRM_IOCTL_RADEON_GEM_CREATE', `0xc020645d')
define(`DRM_IOCTL_RADEON_GEM_GET_TILING', `0xc00c6469')
define(`DRM_IOCTL_RADEON_GEM_INFO', `0xc018645c')
define(`DRM_IOCTL_RADEON_GEM_MMAP', `0xc020645e')
define(`DRM_IOCTL_RADEON_GEM_OP', `0xc010646c')
define(`DRM_IOCTL_RADEON_GEM_PREAD', `0xc0206461')
define(`DRM_IOCTL_RADEON_GEM_PWRITE', `0xc0206462')
define(`DRM_IOCTL_RADEON_GEM_SET_DOMAIN', `0xc00c6463')
define(`DRM_IOCTL_RADEON_GEM_SET_TILING', `0xc00c6468')
define(`DRM_IOCTL_RADEON_GEM_USERPTR', `0xc018646d')
define(`DRM_IOCTL_RADEON_GEM_VA', `0xc018646b')
define(`DRM_IOCTL_RADEON_GEM_WAIT_IDLE', `0x40086464')
define(`DRM_IOCTL_RADEON_GETPARAM', `0xc0106451')
define(`DRM_IOCTL_RADEON_INDICES', `0x4014644a')
define(`DRM_IOCTL_RADEON_INDIRECT', `0xc010644d')
define(`DRM_IOCTL_RADEON_INFO', `0xc0106467')
define(`DRM_IOCTL_RADEON_INIT_HEAP', `0x400c6455')
define(`DRM_IOCTL_RADEON_IRQ_EMIT', `0xc0086456')
define(`DRM_IOCTL_RADEON_IRQ_WAIT', `0x40046457')
define(`DRM_IOCTL_RADEON_RESET', `0x00006445')
define(`DRM_IOCTL_RADEON_SETPARAM', `0x40106459')
define(`DRM_IOCTL_RADEON_STIPPLE', `0x4008644c')
define(`DRM_IOCTL_RADEON_SURF_ALLOC', `0x400c645a')
define(`DRM_IOCTL_RADEON_SURF_FREE', `0x4004645b')
define(`DRM_IOCTL_RADEON_SWAP', `0x00006447')
define(`DRM_IOCTL_RADEON_TEXTURE', `0xc020644e')
define(`DRM_IOCTL_RADEON_VERTEX', `0x40106449')
define(`DRM_IOCTL_RADEON_VERTEX2', `0x4028644f')
define(`DRM_IOCTL_RES_CTX', `0xc0106426')
define(`DRM_IOCTL_RM_CTX', `0xc0086421')
define(`DRM_IOCTL_RM_DRAW', `0xc0046428')
define(`DRM_IOCTL_RM_MAP', `0x4028641b')
define(`DRM_IOCTL_SAVAGE_BCI_CMDBUF', `0x40386441')
define(`DRM_IOCTL_SAVAGE_BCI_EVENT_EMIT', `0xc0086442')
define(`DRM_IOCTL_SAVAGE_BCI_EVENT_WAIT', `0x40086443')
define(`DRM_IOCTL_SAVAGE_BCI_INIT', `0x40606440')
define(`DRM_IOCTL_SET_CLIENT_CAP', `0x4010640d')
define(`DRM_IOCTL_SET_MASTER', `0x0000641e')
define(`DRM_IOCTL_SET_SAREA_CTX', `0x4010641c')
define(`DRM_IOCTL_SET_UNIQUE', `0x40106410')
define(`DRM_IOCTL_SET_VERSION', `0xc0106407')
define(`DRM_IOCTL_SG_ALLOC', `0xc0106438')
define(`DRM_IOCTL_SG_FREE', `0x40106439')
define(`DRM_IOCTL_SIS_AGP_ALLOC', `0xc0206454')
define(`DRM_IOCTL_SIS_AGP_FREE', `0x40206455')
define(`DRM_IOCTL_SIS_AGP_INIT', `0xc0106453')
define(`DRM_IOCTL_SIS_FB_ALLOC', `0xc0206444')
define(`DRM_IOCTL_SIS_FB_FREE', `0x40206445')
define(`DRM_IOCTL_SIS_FB_INIT', `0x40106456')
define(`DRM_IOCTL_SWITCH_CTX', `0x40086424')
define(`DRM_IOCTL_TEGRA_CLOSE_CHANNEL', `0xc0106446')
define(`DRM_IOCTL_TEGRA_GEM_CREATE', `0xc0106440')
define(`DRM_IOCTL_TEGRA_GEM_GET_FLAGS', `0xc008644d')
define(`DRM_IOCTL_TEGRA_GEM_GET_TILING', `0xc010644b')
define(`DRM_IOCTL_TEGRA_GEM_MMAP', `0xc0086441')
define(`DRM_IOCTL_TEGRA_GEM_SET_FLAGS', `0xc008644c')
define(`DRM_IOCTL_TEGRA_GEM_SET_TILING', `0xc010644a')
define(`DRM_IOCTL_TEGRA_GET_SYNCPT', `0xc0106447')
define(`DRM_IOCTL_TEGRA_GET_SYNCPT_BASE', `0xc0106449')
define(`DRM_IOCTL_TEGRA_OPEN_CHANNEL', `0xc0106445')
define(`DRM_IOCTL_TEGRA_SUBMIT', `0xc0586448')
define(`DRM_IOCTL_TEGRA_SYNCPT_INCR', `0xc0086443')
define(`DRM_IOCTL_TEGRA_SYNCPT_READ', `0xc0086442')
define(`DRM_IOCTL_TEGRA_SYNCPT_WAIT', `0xc0106444')
define(`DRM_IOCTL_UNBLOCK', `0xc0046413')
define(`DRM_IOCTL_UNLOCK', `0x4008642b')
define(`DRM_IOCTL_UPDATE_DRAW', `0x4018643f')
define(`DRM_IOCTL_VERSION', `0xc0406400')
define(`DRM_IOCTL_VIA_AGP_INIT', `0xc0086442')
define(`DRM_IOCTL_VIA_ALLOCMEM', `0xc0206440')
define(`DRM_IOCTL_VIA_BLIT_SYNC', `0x4008644f')
define(`DRM_IOCTL_VIA_CMDBUFFER', `0x40106448')
define(`DRM_IOCTL_VIA_CMDBUF_SIZE', `0xc00c644b')
define(`DRM_IOCTL_VIA_DEC_FUTEX', `0x40106445')
define(`DRM_IOCTL_VIA_DMA_BLIT', `0x4030644e')
define(`DRM_IOCTL_VIA_DMA_INIT', `0xc0206447')
define(`DRM_IOCTL_VIA_FB_INIT', `0xc0086443')
define(`DRM_IOCTL_VIA_FLUSH', `0x00006449')
define(`DRM_IOCTL_VIA_FREEMEM', `0x40206441')
define(`DRM_IOCTL_VIA_MAP_INIT', `0xc0286444')
define(`DRM_IOCTL_VIA_PCICMD', `0x4010644a')
define(`DRM_IOCTL_VIA_WAIT_IRQ', `0xc018644d')
define(`DRM_IOCTL_WAIT_VBLANK', `0xc018643a')
define(`DVD_AUTH', `0x00005392')
define(`DVD_READ_STRUCT', `0x00005390')
define(`DVD_WRITE_STRUCT', `0x00005391')
define(`ECCGETLAYOUT', `0x81484d11')
define(`ECCGETSTATS', `0x80104d12')
define(`ENI_MEMDUMP', `0x40106160')
define(`ENI_SETMULT', `0x40106167')
define(`EVIOCGEFFECTS', `0x80044584')
define(`EVIOCGID', `0x80084502')
define(`EVIOCGKEYCODE', `0x80084504')
define(`EVIOCGKEYCODE_V2', `0x80284504')
define(`EVIOCGRAB', `0x40044590')
define(`EVIOCGREP', `0x80084503')
define(`EVIOCGVERSION', `0x80044501')
define(`EVIOCREVOKE', `0x40044591')
define(`EVIOCRMFF', `0x40044581')
define(`EVIOCSCLOCKID', `0x400445a0')
define(`EVIOCSFF', `0x40304580')
define(`EVIOCSKEYCODE', `0x40084504')
define(`EVIOCSKEYCODE_V2', `0x40284504')
define(`EVIOCSREP', `0x40084503')
define(`F2FS_IOC_START_ATOMIC_WRITE', `0xf501')
define(`F2FS_IOC_COMMIT_ATOMIC_WRITE', `0xf502')
define(`F2FS_IOC_START_VOLATILE_WRITE', `0xf503')
define(`F2FS_IOC_RELEASE_VOLATILE_WRITE', `0xf504')
define(`F2FS_IOC_ABORT_VOLATILE_WRITE', `0xf505')
define(`F2FS_IOC_GARBAGE_COLLECT', `0xf506')
define(`F2FS_IOC_WRITE_CHECKPOINT', `0xf507')
define(`F2FS_IOC_DEFRAGMENT', `0xf508')
define(`F2FS_IOC_MOVE_RANGE', `0xf509')
define(`F2FS_IOC_FLUSH_DEVICE', `0xf50a')
define(`F2FS_IOC_GARBAGE_COLLECT_RANGE', `0xf50b')
define(`F2FS_IOC_GET_FEATURES', `0xf50c')
define(`F2FS_IOC_SET_PIN_FILE', `0xf50d')
define(`F2FS_IOC_GET_PIN_FILE', `0xf50e')
define(`F2FS_IOC_PRECACHE_EXTENTS', `0xf50f')
define(`F2FS_IOC_RESIZE_FS', `0xf510')
define(`F2FS_IOC_GET_COMPRESS_BLOCKS', `0xf511')
define(`F2FS_IOC_RELEASE_COMPRESS_BLOCKS', `0xf512')
define(`F2FS_IOC_RESERVE_COMPRESS_BLOCKS', `0xf513')
define(`F2FS_IOC_SEC_TRIM_FILE', `0xf514')
define(`F2FS_IOC_GET_COMPRESS_OPTION', `0xf515')
define(`F2FS_IOC_SET_COMPRESS_OPTION', `0xf516')
define(`F2FS_IOC_DECOMPRESS_FILE', `0xf517')
define(`F2FS_IOC_COMPRESS_FILE', `0xf518')
define(`FAT_IOCTL_GET_ATTRIBUTES', `0x80047210')
define(`FAT_IOCTL_GET_VOLUME_ID', `0x80047213')
define(`FAT_IOCTL_SET_ATTRIBUTES', `0x40047211')
define(`FBIGET_BRIGHTNESS', `0x80044603')
define(`FBIGET_COLOR', `0x80044605')
define(`FBIO_ALLOC', `0x00004613')
define(`FBIOBLANK', `0x00004611')
define(`FBIO_CURSOR', `0xc0684608')
define(`FBIO_FREE', `0x00004614')
define(`FBIOGETCMAP', `0x00004604')
define(`FBIOGET_CON2FBMAP', `0x0000460f')
define(`FBIOGET_CONTRAST', `0x80044601')
define(`FBIO_GETCONTROL2', `0x80084689')
define(`FBIOGET_DISPINFO', `0x00004618')
define(`FBIOGET_FSCREENINFO', `0x00004602')
define(`FBIOGET_GLYPH', `0x00004615')
define(`FBIOGET_HWCINFO', `0x00004616')
define(`FBIOGET_VBLANK', `0x80204612')
define(`FBIOGET_VSCREENINFO', `0x00004600')
define(`FBIOPAN_DISPLAY', `0x00004606')
define(`FBIOPUTCMAP', `0x00004605')
define(`FBIOPUT_CON2FBMAP', `0x00004610')
define(`FBIOPUT_CONTRAST', `0x40044602')
define(`FBIOPUT_MODEINFO', `0x00004617')
define(`FBIOPUT_VSCREENINFO', `0x00004601')
define(`FBIO_RADEON_GET_MIRROR', `0x80084003')
define(`FBIO_RADEON_SET_MIRROR', `0x40084004')
define(`FBIO_WAITEVENT', `0x00004688')
define(`FBIO_WAITFORVSYNC', `0x40044620')
define(`FBIPUT_BRIGHTNESS', `0x40044603')
define(`FBIPUT_COLOR', `0x40044606')
define(`FBIPUT_HSYNC', `0x40044609')
define(`FBIPUT_VSYNC', `0x4004460a')
define(`FDCLRPRM', `0x00000241')
define(`FDDEFPRM', `0x40200243')
define(`FDEJECT', `0x0000025a')
define(`FDFLUSH', `0x0000024b')
define(`FDFMTBEG', `0x00000247')
define(`FDFMTEND', `0x00000249')
define(`FDFMTTRK', `0x400c0248')
define(`FDGETDRVPRM', `0x80800211')
define(`FDGETDRVSTAT', `0x80500212')
define(`FDGETDRVTYP', `0x8010020f')
define(`FDGETFDCSTAT', `0x80280215')
define(`FDGETMAXERRS', `0x8014020e')
define(`FDGETPRM', `0x80200204')
define(`FDMSGOFF', `0x00000246')
define(`FDMSGON', `0x00000245')
define(`FDPOLLDRVSTAT', `0x80500213')
define(`FDRAWCMD', `0x00000258')
define(`FDRESET', `0x00000254')
define(`FDSETDRVPRM', `0x40800290')
define(`FDSETEMSGTRESH', `0x0000024a')
define(`FDSETMAXERRS', `0x4014024c')
define(`FDSETPRM', `0x40200242')
define(`FDTWADDLE', `0x00000259')
define(`FDWERRORCLR', `0x00000256')
define(`FDWERRORGET', `0x80280217')
define(`FE_DISEQC_RECV_SLAVE_REPLY', `0x800c6f40')
define(`FE_DISEQC_RESET_OVERLOAD', `0x00006f3e')
define(`FE_DISEQC_SEND_BURST', `0x00006f41')
define(`FE_DISEQC_SEND_MASTER_CMD', `0x40076f3f')
define(`FE_DISHNETWORK_SEND_LEGACY_CMD', `0x00006f50')
define(`FE_ENABLE_HIGH_LNB_VOLTAGE', `0x00006f44')
define(`FE_GET_EVENT', `0x80286f4e')
define(`FE_GET_FRONTEND', `0x80246f4d')
define(`FE_GET_INFO', `0x80a86f3d')
define(`FE_GET_PROPERTY', `0x80106f53')
define(`FE_READ_BER', `0x80046f46')
define(`FE_READ_SIGNAL_STRENGTH', `0x80026f47')
define(`FE_READ_SNR', `0x80026f48')
define(`FE_READ_STATUS', `0x80046f45')
define(`FE_READ_UNCORRECTED_BLOCKS', `0x80046f49')
define(`FE_SET_FRONTEND', `0x40246f4c')
define(`FE_SET_FRONTEND_TUNE_MODE', `0x00006f51')
define(`FE_SET_PROPERTY', `0x40106f52')
define(`FE_SET_TONE', `0x00006f42')
define(`FE_SET_VOLTAGE', `0x00006f43')
define(`FIBMAP', `0x00000001')
define(`FIFREEZE', `0xc0045877')
define(`FIGETBSZ', `0x00000002')
define(`FIOASYNC', `0x00005452')
define(`FIOCLEX', ifelse(target_arch, mips, 0x00006601, 0x00005451))
define(`FIOGETOWN', `0x00008903')
define(`FIONBIO', `0x00005421')
define(`FIONCLEX', ifelse(target_arch, mips, 0x00006602, 0x00005450))
define(`FIONREAD', ifelse(target_arch, mips, 0x0000467f, 0x0000541b))
define(`FIOQSIZE', `0x00005460')
define(`FIOSETOWN', `0x00008901')
define(`FITHAW', `0xc0045878')
define(`FITRIM', `0xc0185879')
define(`FS_IOC32_GETFLAGS', `0x80046601')
define(`FS_IOC32_GETVERSION', `0x80047601')
define(`FS_IOC32_SETFLAGS', `0x40046602')
define(`FS_IOC32_SETVERSION', `0x40047602')
define(`FS_IOC_ADD_ENCRYPTION_KEY', `0xc0506617')
define(`FS_IOC_ENABLE_VERITY', `0x6685')
define(`FS_IOC_FIEMAP', `0xc020660b')
define(`FS_IOC_FSGETXATTR', `0x801c581f')
define(`FS_IOC_FSSETXATTR', `0x401c5820')
define(`FS_IOC_GET_ENCRYPTION_POLICY', `0x400c6615')
define(`FS_IOC_GET_ENCRYPTION_POLICY_EX', `0xc0096616')
define(`FS_IOC_GET_ENCRYPTION_PWSALT', `0x40106614')
define(`FS_IOC_GETFLAGS', `0x80086601')
define(`FS_IOC_GETVERSION', `0x80087601')
define(`FS_IOC_MEASURE_VERITY', `0x6686')
define(`FS_IOC_REMOVE_ENCRYPTION_KEY', `0xc0406618')
define(`FS_IOC_SET_ENCRYPTION_POLICY', `0x800c6613')
define(`FS_IOC_SETFLAGS', `0x40086602')
define(`FS_IOC_SETVERSION', `0x40087602')
define(`FSL_HV_IOCTL_DOORBELL', `0xc008af06')
define(`FSL_HV_IOCTL_GETPROP', `0xc028af07')
define(`FSL_HV_IOCTL_MEMCPY', `0xc028af05')
define(`FSL_HV_IOCTL_PARTITION_GET_STATUS', `0xc00caf02')
define(`FSL_HV_IOCTL_PARTITION_RESTART', `0xc008af01')
define(`FSL_HV_IOCTL_PARTITION_START', `0xc010af03')
define(`FSL_HV_IOCTL_PARTITION_STOP', `0xc008af04')
define(`FSL_HV_IOCTL_SETPROP', `0xc028af08')
define(`FUNCTIONFS_CLEAR_HALT', `0x00006703')
define(`FUNCTIONFS_ENDPOINT_DESC', `0x80096782')
define(`FUNCTIONFS_ENDPOINT_REVMAP', `0x00006781')
define(`FUNCTIONFS_FIFO_FLUSH', `0x00006702')
define(`FUNCTIONFS_FIFO_STATUS', `0x00006701')
define(`FUNCTIONFS_INTERFACE_REVMAP', `0x00006780')
define(`FW_CDEV_IOC_ADD_DESCRIPTOR', `0xc0182306')
define(`FW_CDEV_IOC_ALLOCATE', `0xc0202302')
define(`FW_CDEV_IOC_ALLOCATE_ISO_RESOURCE', `0xc018230d')
define(`FW_CDEV_IOC_ALLOCATE_ISO_RESOURCE_ONCE', `0x4018230f')
define(`FW_CDEV_IOC_CREATE_ISO_CONTEXT', `0xc0202308')
define(`FW_CDEV_IOC_DEALLOCATE', `0x40042303')
define(`FW_CDEV_IOC_DEALLOCATE_ISO_RESOURCE', `0x4004230e')
define(`FW_CDEV_IOC_DEALLOCATE_ISO_RESOURCE_ONCE', `0x40182310')
define(`FW_CDEV_IOC_FLUSH_ISO', `0x40042318')
define(`FW_CDEV_IOC_GET_CYCLE_TIMER', `0x8010230c')
define(`FW_CDEV_IOC_GET_CYCLE_TIMER2', `0xc0182314')
define(`FW_CDEV_IOC_GET_INFO', `0xc0282300')
define(`FW_CDEV_IOC_GET_SPEED', `0x00002311')
define(`FW_CDEV_IOC_INITIATE_BUS_RESET', `0x40042305')
define(`FW_CDEV_IOC_QUEUE_ISO', `0xc0182309')
define(`FW_CDEV_IOC_RECEIVE_PHY_PACKETS', `0x40082316')
define(`FW_CDEV_IOC_REMOVE_DESCRIPTOR', `0x40042307')
define(`FW_CDEV_IOC_SEND_BROADCAST_REQUEST', `0x40282312')
define(`FW_CDEV_IOC_SEND_PHY_PACKET', `0xc0182315')
define(`FW_CDEV_IOC_SEND_REQUEST', `0x40282301')
define(`FW_CDEV_IOC_SEND_RESPONSE', `0x40182304')
define(`FW_CDEV_IOC_SEND_STREAM_PACKET', `0x40282313')
define(`FW_CDEV_IOC_SET_ISO_CHANNELS', `0x40102317')
define(`FW_CDEV_IOC_START_ISO', `0x4010230a')
define(`FW_CDEV_IOC_STOP_ISO', `0x4004230b')
define(`GADGETFS_CLEAR_HALT', `0x00006703')
define(`GADGETFS_FIFO_FLUSH', `0x00006702')
define(`GADGETFS_FIFO_STATUS', `0x00006701')
define(`GADGET_GET_PRINTER_STATUS', `0x80016721')
define(`GADGET_SET_PRINTER_STATUS', `0xc0016722')
define(`GENWQE_EXECUTE_DDCB', `0xc0e8a532')
define(`GENWQE_EXECUTE_RAW_DDCB', `0xc0e8a533')
define(`GENWQE_GET_CARD_STATE', `0x8004a524')
define(`GENWQE_PIN_MEM', `0xc020a528')
define(`GENWQE_READ_REG16', `0x8010a522')
define(`GENWQE_READ_REG32', `0x8010a520')
define(`GENWQE_READ_REG64', `0x8010a51e')
define(`GENWQE_SLU_READ', `0xc038a551')
define(`GENWQE_SLU_UPDATE', `0xc038a550')
define(`GENWQE_UNPIN_MEM', `0xc020a529')
define(`GENWQE_WRITE_REG16', `0x4010a523')
define(`GENWQE_WRITE_REG32', `0x4010a521')
define(`GENWQE_WRITE_REG64', `0x4010a51f')
define(`GET_ARRAY_INFO', `0x80480911')
define(`GET_BITMAP_FILE', `0x90000915')
define(`GET_DISK_INFO', `0x80140912')
define(`GIGASET_BRKCHARS', `0x40064702')
define(`GIGASET_CONFIG', `0xc0044701')
define(`GIGASET_REDIR', `0xc0044700')
define(`GIGASET_VERSION', `0xc0104703')
define(`GIO_CMAP', `0x00004b70')
define(`GIO_FONT', `0x00004b60')
define(`GIO_FONTX', `0x00004b6b')
define(`GIO_SCRNMAP', `0x00004b40')
define(`GIO_UNIMAP', `0x00004b66')
define(`GIO_UNISCRNMAP', `0x00004b69')
define(`GSMIOC_DISABLE_NET', `0x00004703')
define(`GSMIOC_ENABLE_NET', `0x40344702')
define(`GSMIOC_GETCONF', `0x804c4700')
define(`GSMIOC_SETCONF', `0x404c4701')
define(`HCIBLOCKADDR', `0x400448e6')
define(`HCIDEVDOWN', `0x400448ca')
define(`HCIDEVRESET', `0x400448cb')
define(`HCIDEVRESTAT', `0x400448cc')
define(`HCIDEVUP', `0x400448c9')
define(`HCIGETAUTHINFO', `0x800448d7')
define(`HCIGETCONNINFO', `0x800448d5')
define(`HCIGETCONNLIST', `0x800448d4')
define(`HCIGETDEVINFO', `0x800448d3')
define(`HCIGETDEVLIST', `0x800448d2')
define(`HCIINQUIRY', `0x800448f0')
define(`HCISETACLMTU', `0x400448e3')
define(`HCISETAUTH', `0x400448de')
define(`HCISETENCRYPT', `0x400448df')
define(`HCISETLINKMODE', `0x400448e2')
define(`HCISETLINKPOL', `0x400448e1')
define(`HCISETPTYPE', `0x400448e0')
define(`HCISETRAW', `0x400448dc')
define(`HCISETSCAN', `0x400448dd')
define(`HCISETSCOMTU', `0x400448e4')
define(`HCIUNBLOCKADDR', `0x400448e7')
define(`HDA_IOCTL_GET_WCAP', `0xc0084812')
define(`HDA_IOCTL_PVERSION', `0x80044810')
define(`HDA_IOCTL_VERB_WRITE', `0xc0084811')
define(`HDIO_DRIVE_CMD', `0x0000031f')
define(`HDIO_DRIVE_RESET', `0x0000031c')
define(`HDIO_DRIVE_TASK', `0x0000031e')
define(`HDIO_DRIVE_TASKFILE', `0x0000031d')
define(`HDIO_GET_32BIT', `0x00000309')
define(`HDIO_GET_ACOUSTIC', `0x0000030f')
define(`HDIO_GET_ADDRESS', `0x00000310')
define(`HDIO_GET_BUSSTATE', `0x0000031a')
define(`HDIO_GET_DMA', `0x0000030b')
define(`HDIO_GETGEO', `0x00000301')
define(`HDIO_GET_IDENTITY', `0x0000030d')
define(`HDIO_GET_KEEPSETTINGS', `0x00000308')
define(`HDIO_GET_MULTCOUNT', `0x00000304')
define(`HDIO_GET_NICE', `0x0000030c')
define(`HDIO_GET_NOWERR', `0x0000030a')
define(`HDIO_GET_QDMA', `0x00000305')
define(`HDIO_GET_UNMASKINTR', `0x00000302')
define(`HDIO_GET_WCACHE', `0x0000030e')
define(`HDIO_OBSOLETE_IDENTITY', `0x00000307')
define(`HDIO_SCAN_HWIF', `0x00000328')
define(`HDIO_SET_32BIT', `0x00000324')
define(`HDIO_SET_ACOUSTIC', `0x0000032c')
define(`HDIO_SET_ADDRESS', `0x0000032f')
define(`HDIO_SET_BUSSTATE', `0x0000032d')
define(`HDIO_SET_DMA', `0x00000326')
define(`HDIO_SET_KEEPSETTINGS', `0x00000323')
define(`HDIO_SET_MULTCOUNT', `0x00000321')
define(`HDIO_SET_NICE', `0x00000329')
define(`HDIO_SET_NOWERR', `0x00000325')
define(`HDIO_SET_PIO_MODE', `0x00000327')
define(`HDIO_SET_QDMA', `0x0000032e')
define(`HDIO_SET_UNMASKINTR', `0x00000322')
define(`HDIO_SET_WCACHE', `0x0000032b')
define(`HDIO_SET_XFER', `0x00000306')
define(`HDIO_TRISTATE_HWIF', `0x0000031b')
define(`HDIO_UNREGISTER_HWIF', `0x0000032a')
define(`HE_GET_REG', `0x40106160')
define(`HIDIOCAPPLICATION', `0x00004802')
define(`HIDIOCGCOLLECTIONINDEX', `0x40184810')
define(`HIDIOCGCOLLECTIONINFO', `0xc0104811')
define(`HIDIOCGDEVINFO', `0x801c4803')
define(`HIDIOCGFIELDINFO', `0xc038480a')
define(`HIDIOCGFLAG', `0x8004480e')
define(`HIDIOCGRAWINFO', `0x80084803')
define(`HIDIOCGRDESC', `0x90044802')
define(`HIDIOCGRDESCSIZE', `0x80044801')
define(`HIDIOCGREPORT', `0x400c4807')
define(`HIDIOCGREPORTINFO', `0xc00c4809')
define(`HIDIOCGSTRING', `0x81044804')
define(`HIDIOCGUCODE', `0xc018480d')
define(`HIDIOCGUSAGE', `0xc018480b')
define(`HIDIOCGUSAGES', `0xd01c4813')
define(`HIDIOCGVERSION', `0x80044801')
define(`HIDIOCINITREPORT', `0x00004805')
define(`HIDIOCSFLAG', `0x4004480f')
define(`HIDIOCSREPORT', `0x400c4808')
define(`HIDIOCSUSAGE', `0x4018480c')
define(`HIDIOCSUSAGES', `0x501c4814')
define(`HOT_ADD_DISK', `0x00000928')
define(`HOT_GENERATE_ERROR', `0x0000092a')
define(`HOT_REMOVE_DISK', `0x00000922')
define(`HPET_DPI', `0x00006805')
define(`HPET_EPI', `0x00006804')
define(`HPET_IE_OFF', `0x00006802')
define(`HPET_IE_ON', `0x00006801')
define(`HPET_INFO', `0x80186803')
define(`HPET_IRQFREQ', `0x40086806')
define(`HSC_GET_RX', `0x400c6b14')
define(`HSC_GET_TX', `0x40106b16')
define(`HSC_RESET', `0x00006b10')
define(`HSC_SEND_BREAK', `0x00006b12')
define(`HSC_SET_PM', `0x00006b11')
define(`HSC_SET_RX', `0x400c6b13')
define(`HSC_SET_TX', `0x40106b15')
define(`I2OEVTGET', `0x8068690b')
define(`I2OEVTREG', `0x400c690a')
define(`I2OGETIOPS', `0x80206900')
define(`I2OHRTGET', `0xc0186901')
define(`I2OHTML', `0xc0306909')
define(`I2OLCTGET', `0xc0186902')
define(`I2OPARMGET', `0xc0286904')
define(`I2OPARMSET', `0xc0286903')
define(`I2OPASSTHRU', `0x8010690c')
define(`I2OPASSTHRU32', `0x8008690c')
define(`I2OSWDEL', `0xc0306907')
define(`I2OSWDL', `0xc0306905')
define(`I2OSWUL', `0xc0306906')
define(`I2OVALIDATE', `0x80046908')
define(`I8K_BIOS_VERSION', `0x80046980')
define(`I8K_FN_STATUS', `0x80086983')
define(`I8K_GET_FAN', `0xc0086986')
define(`I8K_GET_SPEED', `0xc0086985')
define(`I8K_GET_TEMP', `0x80086984')
define(`I8K_MACHINE_ID', `0x80046981')
define(`I8K_POWER_STATUS', `0x80086982')
define(`I8K_SET_FAN', `0xc0086987')
define(`IB_USER_MAD_ENABLE_PKEY', `0x00001b03')
define(`IB_USER_MAD_REGISTER_AGENT', `0xc01c1b01')
define(`IB_USER_MAD_REGISTER_AGENT2', `0xc0281b04')
define(`IB_USER_MAD_UNREGISTER_AGENT', `0x40041b02')
define(`IDT77105_GETSTAT', `0x40106132')
define(`IDT77105_GETSTATZ', `0x40106133')
define(`IIOCDBGVAR', `0x0000497f')
define(`IIOCDRVCTL', `0x00004980')
define(`IIOCGETCPS', `0x00004915')
define(`IIOCGETDVR', `0x00004916')
define(`IIOCGETMAP', `0x00004911')
define(`IIOCGETPRF', `0x0000490f')
define(`IIOCGETSET', `0x00004908')
define(`IIOCNETAIF', `0x00004901')
define(`IIOCNETALN', `0x00004920')
define(`IIOCNETANM', `0x00004905')
define(`IIOCNETASL', `0x00004913')
define(`IIOCNETDIF', `0x00004902')
define(`IIOCNETDIL', `0x00004914')
define(`IIOCNETDLN', `0x00004921')
define(`IIOCNETDNM', `0x00004906')
define(`IIOCNETDWRSET', `0x00004918')
define(`IIOCNETGCF', `0x00004904')
define(`IIOCNETGNM', `0x00004907')
define(`IIOCNETGPN', `0x00004922')
define(`IIOCNETHUP', `0x0000490b')
define(`IIOCNETLCR', `0x00004917')
define(`IIOCNETSCF', `0x00004903')
define(`IIOCSETBRJ', `0x0000490d')
define(`IIOCSETGST', `0x0000490c')
define(`IIOCSETMAP', `0x00004912')
define(`IIOCSETPRF', `0x00004910')
define(`IIOCSETSET', `0x00004909')
define(`IIOCSETVER', `0x0000490a')
define(`IIOCSIGPRF', `0x0000490e')
define(`IIO_GET_EVENT_FD_IOCTL', `0x80046990')
define(`IMADDTIMER', `0x80044940')
define(`IMCLEAR_L2', `0x80044946')
define(`IMCTRLREQ', `0x80044945')
define(`IMDELTIMER', `0x80044941')
define(`IMGETCOUNT', `0x80044943')
define(`IMGETDEVINFO', `0x80044944')
define(`IMGETVERSION', `0x80044942')
define(`IMHOLD_L1', `0x80044948')
define(`IMSETDEVNAME', `0x80184947')
define(`INCFS_IOCTL_CREATE_FILE', `0x0000671e')
define(`INCFS_IOCTL_READ_SIGNATURE', `0x0000671f')
define(`INCFS_IOCTL_FILL_BLOCKS', `0x00006720')
define(`INCFS_IOCTL_PERMIT_FILL', `0x00006721')
define(`INCFS_IOCTL_GET_FILLED_BLOCKS', `0x00006722')
define(`INCFS_IOCTL_CREATE_MAPPED_FILE', `0x00006723')
define(`INCFS_IOCTL_GET_BLOCK_COUNT', `0x00006724')
define(`INCFS_IOCTL_GET_READ_TIMEOUTS', `0x00006725')
define(`INCFS_IOCTL_SET_READ_TIMEOUTS', `0x00006726')
define(`INCFS_IOCTL_GET_LAST_READ_ERROR', `0x00006727')
define(`IOCTL_EVTCHN_BIND_INTERDOMAIN', `0x00084501')
define(`IOCTL_EVTCHN_BIND_UNBOUND_PORT', `0x00044502')
define(`IOCTL_EVTCHN_BIND_VIRQ', `0x00044500')
define(`IOCTL_EVTCHN_NOTIFY', `0x00044504')
define(`IOCTL_EVTCHN_RESET', `0x00004505')
define(`IOCTL_EVTCHN_UNBIND', `0x00044503')
define(`IOCTL_MEI_CONNECT_CLIENT', `0xc0104801')
define(`IOCTL_VMCI_CTX_ADD_NOTIFICATION', `0x000007af')
define(`IOCTL_VMCI_CTX_GET_CPT_STATE', `0x000007b1')
define(`IOCTL_VMCI_CTX_REMOVE_NOTIFICATION', `0x000007b0')
define(`IOCTL_VMCI_CTX_SET_CPT_STATE', `0x000007b2')
define(`IOCTL_VMCI_DATAGRAM_RECEIVE', `0x000007ac')
define(`IOCTL_VMCI_DATAGRAM_SEND', `0x000007ab')
define(`IOCTL_VMCI_GET_CONTEXT_ID', `0x000007b3')
define(`IOCTL_VMCI_INIT_CONTEXT', `0x000007a0')
define(`IOCTL_VMCI_NOTIFICATIONS_RECEIVE', `0x000007a6')
define(`IOCTL_VMCI_NOTIFY_RESOURCE', `0x000007a5')
define(`IOCTL_VMCI_QUEUEPAIR_ALLOC', `0x000007a8')
define(`IOCTL_VMCI_QUEUEPAIR_DETACH', `0x000007aa')
define(`IOCTL_VMCI_QUEUEPAIR_SETPAGEFILE', `0x000007a9')
define(`IOCTL_VMCI_QUEUEPAIR_SETVA', `0x000007a4')
define(`IOCTL_VMCI_SET_NOTIFY', `0x000007cb')
define(`IOCTL_VMCI_SOCKETS_GET_AF_VALUE', `0x000007b8')
define(`IOCTL_VMCI_SOCKETS_GET_LOCAL_CID', `0x000007b9')
define(`IOCTL_VMCI_SOCKETS_VERSION', `0x000007b4')
define(`IOCTL_VMCI_VERSION', `0x0000079f')
define(`IOCTL_VMCI_VERSION2', `0x000007a7')
define(`IOCTL_VM_SOCKETS_GET_LOCAL_CID', `0x000007b9')
define(`IOCTL_WDM_MAX_COMMAND', `0x800248a0')
define(`IOCTL_XENBUS_BACKEND_EVTCHN', `0x00004200')
define(`IOCTL_XENBUS_BACKEND_SETUP', `0x00004201')
define(`ION_IOC_ALLOC', `0xc0204900')
define(`ION_IOC_CUSTOM', `0xc0104906')
define(`ION_IOC_FREE', `0xc0044901')
define(`ION_IOC_IMPORT', `0xc0084905')
define(`ION_IOC_MAP', `0xc0084902')
define(`ION_IOC_SHARE', `0xc0084904')
define(`ION_IOC_SYNC', `0xc0084907')
define(`ION_IOC_TEST_DMA_MAPPING', `0x402049f1')
define(`ION_IOC_TEST_KERNEL_MAPPING', `0x402049f2')
define(`ION_IOC_TEST_SET_FD', `0x000049f0')
define(`IOW_GETINFO', `0x8028c003')
define(`IOW_READ', `0x4008c002')
define(`IOW_WRITE', `0x4008c001')
define(`IPMICTL_GET_MAINTENANCE_MODE_CMD', `0x8004691e')
define(`IPMICTL_GET_MY_ADDRESS_CMD', `0x80046912')
define(`IPMICTL_GET_MY_CHANNEL_ADDRESS_CMD', `0x80046919')
define(`IPMICTL_GET_MY_CHANNEL_LUN_CMD', `0x8004691b')
define(`IPMICTL_GET_MY_LUN_CMD', `0x80046914')
define(`IPMICTL_GET_TIMING_PARMS_CMD', `0x80086917')
define(`IPMICTL_RECEIVE_MSG', `0xc030690c')
define(`IPMICTL_RECEIVE_MSG_TRUNC', `0xc030690b')
define(`IPMICTL_REGISTER_FOR_CMD', `0x8002690e')
define(`IPMICTL_REGISTER_FOR_CMD_CHANS', `0x800c691c')
define(`IPMICTL_SEND_COMMAND', `0x8028690d')
define(`IPMICTL_SEND_COMMAND_SETTIME', `0x80306915')
define(`IPMICTL_SET_GETS_EVENTS_CMD', `0x80046910')
define(`IPMICTL_SET_MAINTENANCE_MODE_CMD', `0x4004691f')
define(`IPMICTL_SET_MY_ADDRESS_CMD', `0x80046911')
define(`IPMICTL_SET_MY_CHANNEL_ADDRESS_CMD', `0x80046918')
define(`IPMICTL_SET_MY_CHANNEL_LUN_CMD', `0x8004691a')
define(`IPMICTL_SET_MY_LUN_CMD', `0x80046913')
define(`IPMICTL_SET_TIMING_PARMS_CMD', `0x80086916')
define(`IPMICTL_UNREGISTER_FOR_CMD', `0x8002690f')
define(`IPMICTL_UNREGISTER_FOR_CMD_CHANS', `0x800c691d')
define(`IVTVFB_IOC_DMA_FRAME', `0x401856c0')
define(`IVTV_IOC_DMA_FRAME', `0x404056c0')
define(`IVTV_IOC_PASSTHROUGH_MODE', `0x400456c1')
define(`IXJCTL_AEC_GET_LEVEL', `0x000071cd')
define(`IXJCTL_AEC_START', `0x400471cb')
define(`IXJCTL_AEC_STOP', `0x000071cc')
define(`IXJCTL_CARDTYPE', `0x800471c1')
define(`IXJCTL_CID', `0x800871d4')
define(`IXJCTL_CIDCW', `0x400871d9')
define(`IXJCTL_DAA_AGAIN', `0x400471d2')
define(`IXJCTL_DAA_COEFF_SET', `0x400471d0')
define(`IXJCTL_DRYBUFFER_CLEAR', `0x000071e7')
define(`IXJCTL_DRYBUFFER_READ', `0x800871e6')
define(`IXJCTL_DSP_IDLE', `0x000071c5')
define(`IXJCTL_DSP_RESET', `0x000071c0')
define(`IXJCTL_DSP_TYPE', `0x800471c3')
define(`IXJCTL_DSP_VERSION', `0x800471c4')
define(`IXJCTL_DTMF_PRESCALE', `0x400471e8')
define(`IXJCTL_FILTER_CADENCE', `0x400871d6')
define(`IXJCTL_FRAMES_READ', `0x800871e2')
define(`IXJCTL_FRAMES_WRITTEN', `0x800871e3')
define(`IXJCTL_GET_FILTER_HIST', `0x400471c8')
define(`IXJCTL_HZ', `0x400471e0')
define(`IXJCTL_INIT_TONE', `0x400871c9')
define(`IXJCTL_INTERCOM_START', `0x400471fd')
define(`IXJCTL_INTERCOM_STOP', `0x400471fe')
define(`IXJCTL_MIXER', `0x400471cf')
define(`IXJCTL_PLAY_CID', `0x000071d7')
define(`IXJCTL_PORT', `0x400471d1')
define(`IXJCTL_POTS_PSTN', `0x400471d5')
define(`IXJCTL_PSTN_LINETEST', `0x000071d3')
define(`IXJCTL_RATE', `0x400471e1')
define(`IXJCTL_READ_WAIT', `0x800871e4')
define(`IXJCTL_SC_RXG', `0x400471ea')
define(`IXJCTL_SC_TXG', `0x400471eb')
define(`IXJCTL_SERIAL', `0x800471c2')
define(`IXJCTL_SET_FILTER', `0x400871c7')
define(`IXJCTL_SET_FILTER_RAW', `0x400871dd')
define(`IXJCTL_SET_LED', `0x400471ce')
define(`IXJCTL_SIGCTL', `0x400871e9')
define(`IXJCTL_TESTRAM', `0x000071c6')
define(`IXJCTL_TONE_CADENCE', `0x400871ca')
define(`IXJCTL_VERSION', `0x800871da')
define(`IXJCTL_VMWI', `0x800471d8')
define(`IXJCTL_WRITE_WAIT', `0x800871e5')
define(`JSIOCGAXES', `0x80016a11')
define(`JSIOCGAXMAP', `0x80406a32')
define(`JSIOCGBTNMAP', `0x84006a34')
define(`JSIOCGBUTTONS', `0x80016a12')
define(`JSIOCGCORR', `0x80246a22')
define(`JSIOCGVERSION', `0x80046a01')
define(`JSIOCSAXMAP', `0x40406a31')
define(`JSIOCSBTNMAP', `0x44006a33')
define(`JSIOCSCORR', `0x40246a21')
define(`KCOV_DISABLE', `0x00006365')
define(`KCOV_ENABLE', `0x00006364')
define(`KCOV_INIT_TRACE', `0x80086301')
define(`KDADDIO', `0x00004b34')
define(`KDDELIO', `0x00004b35')
define(`KDDISABIO', `0x00004b37')
define(`KDENABIO', `0x00004b36')
define(`KDFONTOP', `0x00004b72')
define(`KDGETKEYCODE', `0x00004b4c')
define(`KDGETLED', `0x00004b31')
define(`KDGETMODE', `0x00004b3b')
define(`KDGKBDIACR', `0x00004b4a')
define(`KDGKBDIACRUC', `0x00004bfa')
define(`KDGKBENT', `0x00004b46')
define(`KDGKBLED', `0x00004b64')
define(`KDGKBMETA', `0x00004b62')
define(`KDGKBMODE', `0x00004b44')
define(`KDGKBSENT', `0x00004b48')
define(`KDGKBTYPE', `0x00004b33')
define(`KDKBDREP', `0x00004b52')
define(`KDMAPDISP', `0x00004b3c')
define(`KDMKTONE', `0x00004b30')
define(`KDSETKEYCODE', `0x00004b4d')
define(`KDSETLED', `0x00004b32')
define(`KDSETMODE', `0x00004b3a')
define(`KDSIGACCEPT', `0x00004b4e')
define(`KDSKBDIACR', `0x00004b4b')
define(`KDSKBDIACRUC', `0x00004bfb')
define(`KDSKBENT', `0x00004b47')
define(`KDSKBLED', `0x00004b65')
define(`KDSKBMETA', `0x00004b63')
define(`KDSKBMODE', `0x00004b45')
define(`KDSKBSENT', `0x00004b49')
define(`KDUNMAPDISP', `0x00004b3d')
define(`KIOCSOUND', `0x00004b2f')
define(`KVM_ALLOCATE_RMA', `0x8008aea9')
define(`KVM_ARM_PREFERRED_TARGET', `0x8020aeaf')
define(`KVM_ARM_SET_DEVICE_ADDR', `0x4010aeab')
define(`KVM_ARM_VCPU_INIT', `0x4020aeae')
define(`KVM_ASSIGN_DEV_IRQ', `0x4040ae70')
define(`KVM_ASSIGN_PCI_DEVICE', `0x8040ae69')
define(`KVM_ASSIGN_SET_INTX_MASK', `0x4040aea4')
define(`KVM_ASSIGN_SET_MSIX_ENTRY', `0x4010ae74')
define(`KVM_ASSIGN_SET_MSIX_NR', `0x4008ae73')
define(`KVM_CHECK_EXTENSION', `0x0000ae03')
define(`KVM_CREATE_DEVICE', `0xc00caee0')
define(`KVM_CREATE_IRQCHIP', `0x0000ae60')
define(`KVM_CREATE_PIT', `0x0000ae64')
define(`KVM_CREATE_PIT2', `0x4040ae77')
define(`KVM_CREATE_SPAPR_TCE', `0x400caea8')
define(`KVM_CREATE_VCPU', `0x0000ae41')
define(`KVM_CREATE_VM', `0x0000ae01')
define(`KVM_DEASSIGN_DEV_IRQ', `0x4040ae75')
define(`KVM_DEASSIGN_PCI_DEVICE', `0x4040ae72')
define(`KVM_DIRTY_TLB', `0x4010aeaa')
define(`KVM_ENABLE_CAP', `0x4068aea3')
define(`KVM_GET_API_VERSION', `0x0000ae00')
define(`KVM_GET_CLOCK', `0x8030ae7c')
define(`KVM_GET_CPUID2', `0xc008ae91')
define(`KVM_GET_DEBUGREGS', `0x8080aea1')
define(`KVM_GET_DEVICE_ATTR', `0x4018aee2')
define(`KVM_GET_DIRTY_LOG', `0x4010ae42')
define(`KVM_GET_EMULATED_CPUID', `0xc008ae09')
define(`KVM_GET_FPU', `0x81a0ae8c')
define(`KVM_GET_IRQCHIP', `0xc208ae62')
define(`KVM_GET_LAPIC', `0x8400ae8e')
define(`KVM_GET_MP_STATE', `0x8004ae98')
define(`KVM_GET_MSR_INDEX_LIST', `0xc004ae02')
define(`KVM_GET_MSRS', `0xc008ae88')
define(`KVM_GET_NR_MMU_PAGES', `0x0000ae45')
define(`KVM_GET_ONE_REG', `0x4010aeab')
define(`KVM_GET_PIT', `0xc048ae65')
define(`KVM_GET_PIT2', `0x8070ae9f')
define(`KVM_GET_REG_LIST', `0xc008aeb0')
define(`KVM_GET_REGS', `0x8090ae81')
define(`KVM_GET_SREGS', `0x8138ae83')
define(`KVM_GET_SUPPORTED_CPUID', `0xc008ae05')
define(`KVM_GET_TSC_KHZ', `0x0000aea3')
define(`KVM_GET_VCPU_EVENTS', `0x8040ae9f')
define(`KVM_GET_VCPU_MMAP_SIZE', `0x0000ae04')
define(`KVM_GET_XCRS', `0x8188aea6')
define(`KVM_GET_XSAVE', `0x9000aea4')
define(`KVM_HAS_DEVICE_ATTR', `0x4018aee3')
define(`KVM_INTERRUPT', `0x4004ae86')
define(`KVM_IOEVENTFD', `0x4040ae79')
define(`KVM_IRQFD', `0x4020ae76')
define(`KVM_IRQ_LINE', `0x4008ae61')
define(`KVM_IRQ_LINE_STATUS', `0xc008ae67')
define(`KVM_KVMCLOCK_CTRL', `0x0000aead')
define(`KVM_NMI', `0x0000ae9a')
define(`KVM_PPC_ALLOCATE_HTAB', `0xc004aea7')
define(`KVM_PPC_GET_HTAB_FD', `0x4020aeaa')
define(`KVM_PPC_GET_PVINFO', `0x4080aea1')
define(`KVM_PPC_GET_SMMU_INFO', `0x8250aea6')
define(`KVM_PPC_RTAS_DEFINE_TOKEN', `0x4080aeac')
define(`KVM_REGISTER_COALESCED_MMIO', `0x4010ae67')
define(`KVM_REINJECT_CONTROL', `0x0000ae71')
define(`KVM_RUN', `0x0000ae80')
define(`KVM_S390_ENABLE_SIE', `0x0000ae06')
define(`KVM_S390_INITIAL_RESET', `0x0000ae97')
define(`KVM_S390_INTERRUPT', `0x4010ae94')
define(`KVM_S390_SET_INITIAL_PSW', `0x4010ae96')
define(`KVM_S390_STORE_STATUS', `0x4008ae95')
define(`KVM_S390_UCAS_MAP', `0x4018ae50')
define(`KVM_S390_UCAS_UNMAP', `0x4018ae51')
define(`KVM_S390_VCPU_FAULT', `0x4008ae52')
define(`KVM_SET_BOOT_CPU_ID', `0x0000ae78')
define(`KVM_SET_CLOCK', `0x4030ae7b')
define(`KVM_SET_CPUID', `0x4008ae8a')
define(`KVM_SET_CPUID2', `0x4008ae90')
define(`KVM_SET_DEBUGREGS', `0x4080aea2')
define(`KVM_SET_DEVICE_ATTR', `0x4018aee1')
define(`KVM_SET_FPU', `0x41a0ae8d')
define(`KVM_SET_GSI_ROUTING', `0x4008ae6a')
define(`KVM_SET_GUEST_DEBUG', `0x4048ae9b')
define(`KVM_SET_IDENTITY_MAP_ADDR', `0x4008ae48')
define(`KVM_SET_IRQCHIP', `0x8208ae63')
define(`KVM_SET_LAPIC', `0x4400ae8f')
define(`KVM_SET_MEMORY_ALIAS', `0x4020ae43')
define(`KVM_SET_MEMORY_REGION', `0x4018ae40')
define(`KVM_SET_MP_STATE', `0x4004ae99')
define(`KVM_SET_MSRS', `0x4008ae89')
define(`KVM_SET_NR_MMU_PAGES', `0x0000ae44')
define(`KVM_SET_ONE_REG', `0x4010aeac')
define(`KVM_SET_PIT', `0x8048ae66')
define(`KVM_SET_PIT2', `0x4070aea0')
define(`KVM_SET_REGS', `0x4090ae82')
define(`KVM_SET_SIGNAL_MASK', `0x4004ae8b')
define(`KVM_SET_SREGS', `0x4138ae84')
define(`KVM_SET_TSC_KHZ', `0x0000aea2')
define(`KVM_SET_TSS_ADDR', `0x0000ae47')
define(`KVM_SET_USER_MEMORY_REGION', `0x4020ae46')
define(`KVM_SET_VAPIC_ADDR', `0x4008ae93')
define(`KVM_SET_VCPU_EVENTS', `0x4040aea0')
define(`KVM_SET_XCRS', `0x4188aea7')
define(`KVM_SET_XSAVE', `0x5000aea5')
define(`KVM_SIGNAL_MSI', `0x4020aea5')
define(`KVM_TPR_ACCESS_REPORTING', `0xc028ae92')
define(`KVM_TRANSLATE', `0xc018ae85')
define(`KVM_UNREGISTER_COALESCED_MMIO', `0x4010ae68')
define(`KVM_X86_GET_MCE_CAP_SUPPORTED', `0x8008ae9d')
define(`KVM_X86_SET_MCE', `0x4040ae9e')
define(`KVM_X86_SETUP_MCE', `0x4008ae9c')
define(`KVM_XEN_HVM_CONFIG', `0x4038ae7a')
define(`KYRO_IOCTL_OVERLAY_CREATE', `0x00006b00')
define(`KYRO_IOCTL_OVERLAY_OFFSET', `0x00006b04')
define(`KYRO_IOCTL_OVERLAY_VIEWPORT_SET', `0x00006b01')
define(`KYRO_IOCTL_SET_VIDEO_MODE', `0x00006b02')
define(`KYRO_IOCTL_STRIDE', `0x00006b05')
define(`KYRO_IOCTL_UVSTRIDE', `0x00006b03')
define(`LIRC_GET_FEATURES', `0x80046900')
define(`LIRC_GET_LENGTH', `0x8004690f')
define(`LIRC_GET_MAX_FILTER_PULSE', `0x8004690b')
define(`LIRC_GET_MAX_FILTER_SPACE', `0x8004690d')
define(`LIRC_GET_MAX_TIMEOUT', `0x80046909')
define(`LIRC_GET_MIN_FILTER_PULSE', `0x8004690a')
define(`LIRC_GET_MIN_FILTER_SPACE', `0x8004690c')
define(`LIRC_GET_MIN_TIMEOUT', `0x80046908')
define(`LIRC_GET_REC_CARRIER', `0x80046904')
define(`LIRC_GET_REC_DUTY_CYCLE', `0x80046906')
define(`LIRC_GET_REC_MODE', `0x80046902')
define(`LIRC_GET_REC_RESOLUTION', `0x80046907')
define(`LIRC_GET_SEND_CARRIER', `0x80046903')
define(`LIRC_GET_SEND_DUTY_CYCLE', `0x80046905')
define(`LIRC_GET_SEND_MODE', `0x80046901')
define(`LIRC_NOTIFY_DECODE', `0x00006920')
define(`LIRC_SET_MEASURE_CARRIER_MODE', `0x4004691d')
define(`LIRC_SET_REC_CARRIER', `0x40046914')
define(`LIRC_SET_REC_CARRIER_RANGE', `0x4004691f')
define(`LIRC_SET_REC_DUTY_CYCLE', `0x40046916')
define(`LIRC_SET_REC_DUTY_CYCLE_RANGE', `0x4004691e')
define(`LIRC_SET_REC_FILTER', `0x4004691c')
define(`LIRC_SET_REC_FILTER_PULSE', `0x4004691a')
define(`LIRC_SET_REC_FILTER_SPACE', `0x4004691b')
define(`LIRC_SET_REC_MODE', `0x40046912')
define(`LIRC_SET_REC_TIMEOUT', `0x40046918')
define(`LIRC_SET_REC_TIMEOUT_REPORTS', `0x40046919')
define(`LIRC_SET_SEND_CARRIER', `0x40046913')
define(`LIRC_SET_SEND_DUTY_CYCLE', `0x40046915')
define(`LIRC_SET_SEND_MODE', `0x40046911')
define(`LIRC_SET_TRANSMITTER_MASK', `0x40046917')
define(`LIRC_SETUP_END', `0x00006922')
define(`LIRC_SETUP_START', `0x00006921')
define(`LIRC_SET_WIDEBAND_RECEIVER', `0x40046923')
define(`LOGGER_FLUSH_LOG', `0x0000ae04')
define(`LOGGER_GET_LOG_BUF_SIZE', `0x0000ae01')
define(`LOGGER_GET_LOG_LEN', `0x0000ae02')
define(`LOGGER_GET_NEXT_ENTRY_LEN', `0x0000ae03')
define(`LOGGER_GET_VERSION', `0x0000ae05')
define(`LOGGER_SET_VERSION', `0x0000ae06')
define(`LOOP_CHANGE_FD', `0x00004c06')
define(`LOOP_CLR_FD', `0x00004c01')
define(`LOOP_CONFIGURE', `0x00004c0a')
define(`LOOP_CTL_ADD', `0x00004c80')
define(`LOOP_CTL_GET_FREE', `0x00004c82')
define(`LOOP_CTL_REMOVE', `0x00004c81')
define(`LOOP_GET_STATUS', `0x00004c03')
define(`LOOP_GET_STATUS64', `0x00004c05')
define(`LOOP_SET_BLOCK_SIZE', `0x00004c09')
define(`LOOP_SET_CAPACITY', `0x00004c07')
define(`LOOP_SET_DIRECT_IO', `0x00004c08')
define(`LOOP_SET_FD', `0x00004c00')
define(`LOOP_SET_STATUS', `0x00004c02')
define(`LOOP_SET_STATUS64', `0x00004c04')
define(`MATROXFB_GET_ALL_OUTPUTS', `0x80086efb')
define(`MATROXFB_GET_AVAILABLE_OUTPUTS', `0x80086ef9')
define(`MATROXFB_GET_OUTPUT_CONNECTION', `0x80086ef8')
define(`MATROXFB_GET_OUTPUT_MODE', `0xc0086efa')
define(`MATROXFB_SET_OUTPUT_CONNECTION', `0x40086ef8')
define(`MATROXFB_SET_OUTPUT_MODE', `0x40086efa')
define(`MBXFB_IOCG_ALPHA', `0x8018f401')
define(`MBXFB_IOCS_ALPHA', `0x4018f402')
define(`MBXFB_IOCS_PLANEORDER', `0x8002f403')
define(`MBXFB_IOCS_REG', `0x400cf404')
define(`MBXFB_IOCX_OVERLAY', `0xc030f400')
define(`MBXFB_IOCX_REG', `0xc00cf405')
define(`MCE_GETCLEAR_FLAGS', `0x80044d03')
define(`MCE_GET_LOG_LEN', `0x80044d02')
define(`MCE_GET_RECORD_LEN', `0x80044d01')
define(`MEDIA_IOC_DEVICE_INFO', `0xc1007c00')
define(`MEDIA_IOC_ENUM_ENTITIES', `0xc1007c01')
define(`MEDIA_IOC_ENUM_LINKS', `0xc0287c02')
define(`MEDIA_IOC_SETUP_LINK', `0xc0347c03')
define(`MEMERASE', `0x40084d02')
define(`MEMERASE64', `0x40104d14')
define(`MEMGETBADBLOCK', `0x40084d0b')
define(`MEMGETINFO', `0x80204d01')
define(`MEMGETOOBSEL', `0x80c84d0a')
define(`MEMGETREGIONCOUNT', `0x80044d07')
define(`MEMGETREGIONINFO', `0xc0104d08')
define(`MEMISLOCKED', `0x80084d17')
define(`MEMLOCK', `0x40084d05')
define(`MEMREADOOB', `0xc0104d04')
define(`MEMREADOOB64', `0xc0184d16')
define(`MEMSETBADBLOCK', `0x40084d0c')
define(`MEMUNLOCK', `0x40084d06')
define(`MEMWRITE', `0xc0304d18')
define(`MEMWRITEOOB', `0xc0104d03')
define(`MEMWRITEOOB64', `0xc0184d15')
define(`MEYEIOC_G_PARAMS', `0x800676c0')
define(`MEYEIOC_QBUF_CAPT', `0x400476c2')
define(`MEYEIOC_S_PARAMS', `0x400676c1')
define(`MEYEIOC_STILLCAPT', `0x000076c4')
define(`MEYEIOC_STILLJCAPT', `0x800476c5')
define(`MEYEIOC_SYNC', `0xc00476c3')
define(`MFB_GET_ALPHA', `0x80014d00')
define(`MFB_GET_AOID', `0x80084d04')
define(`MFB_GET_GAMMA', `0x80014d01')
define(`MFB_GET_PIXFMT', `0x80044d08')
define(`MFB_SET_ALPHA', `0x40014d00')
define(`MFB_SET_AOID', `0x40084d04')
define(`MFB_SET_BRIGHTNESS', `0x40014d03')
define(`MFB_SET_CHROMA_KEY', `0x400c4d01')
define(`MFB_SET_GAMMA', `0x40014d01')
define(`MFB_SET_PIXFMT', `0x40044d08')
define(`MGSL_IOCCLRMODCOUNT', `0x00006d0f')
define(`MGSL_IOCGGPIO', `0x80106d11')
define(`MGSL_IOCGIF', `0x00006d0b')
define(`MGSL_IOCGPARAMS', `0x80306d01')
define(`MGSL_IOCGSTATS', `0x00006d07')
define(`MGSL_IOCGTXIDLE', `0x00006d03')
define(`MGSL_IOCGXCTRL', `0x00006d16')
define(`MGSL_IOCGXSYNC', `0x00006d14')
define(`MGSL_IOCLOOPTXDONE', `0x00006d09')
define(`MGSL_IOCRXENABLE', `0x00006d05')
define(`MGSL_IOCSGPIO', `0x40106d10')
define(`MGSL_IOCSIF', `0x00006d0a')
define(`MGSL_IOCSPARAMS', `0x40306d00')
define(`MGSL_IOCSTXIDLE', `0x00006d02')
define(`MGSL_IOCSXCTRL', `0x00006d15')
define(`MGSL_IOCSXSYNC', `0x00006d13')
define(`MGSL_IOCTXABORT', `0x00006d06')
define(`MGSL_IOCTXENABLE', `0x00006d04')
define(`MGSL_IOCWAITEVENT', `0xc0046d08')
define(`MGSL_IOCWAITGPIO', `0xc0106d12')
define(`MIC_VIRTIO_ADD_DEVICE', `0xc0087301')
define(`MIC_VIRTIO_CONFIG_CHANGE', `0xc0087305')
define(`MIC_VIRTIO_COPY_DESC', `0xc0087302')
define(`MMC_IOC_CMD', `0xc048b300')
define(`MMTIMER_GETBITS', `0x00006d04')
define(`MMTIMER_GETCOUNTER', `0x80086d09')
define(`MMTIMER_GETFREQ', `0x80086d02')
define(`MMTIMER_GETOFFSET', `0x00006d00')
define(`MMTIMER_GETRES', `0x80086d01')
define(`MMTIMER_MMAPAVAIL', `0x00006d06')
define(`MSMFB_BLIT', `0x40046d02')
define(`MSMFB_GRP_DISP', `0x40046d01')
define(`MTDFILEMODE', `0x00004d13')
define(`MTIOCGET', `0x80306d02')
define(`MTIOCPOS', `0x80086d03')
define(`MTIOCTOP', `0x40086d01')
define(`MTRRIOC_ADD_ENTRY', `0x40104d00')
define(`MTRRIOC_ADD_PAGE_ENTRY', `0x40104d05')
define(`MTRRIOC_DEL_ENTRY', `0x40104d02')
define(`MTRRIOC_DEL_PAGE_ENTRY', `0x40104d07')
define(`MTRRIOC_GET_ENTRY', `0xc0184d03')
define(`MTRRIOC_GET_PAGE_ENTRY', `0xc0184d08')
define(`MTRRIOC_KILL_ENTRY', `0x40104d04')
define(`MTRRIOC_KILL_PAGE_ENTRY', `0x40104d09')
define(`MTRRIOC_SET_ENTRY', `0x40104d01')
define(`MTRRIOC_SET_PAGE_ENTRY', `0x40104d06')
define(`NBD_CLEAR_QUE', `0x0000ab05')
define(`NBD_CLEAR_SOCK', `0x0000ab04')
define(`NBD_DISCONNECT', `0x0000ab08')
define(`NBD_DO_IT', `0x0000ab03')
define(`NBD_PRINT_DEBUG', `0x0000ab06')
define(`NBD_SET_BLKSIZE', `0x0000ab01')
define(`NBD_SET_FLAGS', `0x0000ab0a')
define(`NBD_SET_SIZE', `0x0000ab02')
define(`NBD_SET_SIZE_BLOCKS', `0x0000ab07')
define(`NBD_SET_SOCK', `0x0000ab00')
define(`NBD_SET_TIMEOUT', `0x0000ab09')
define(`NCP_IOC_CONN_LOGGED_IN', `0x00006e03')
define(`NCP_IOC_GETCHARSETS', `0xc02a6e0b')
define(`NCP_IOC_GETDENTRYTTL', `0x40046e0c')
define(`NCP_IOC_GET_FS_INFO', `0xc0286e04')
define(`NCP_IOC_GET_FS_INFO_V2', `0xc0306e04')
define(`NCP_IOC_GETMOUNTUID', `0x40026e02')
define(`NCP_IOC_GETMOUNTUID2', `0x40086e02')
define(`NCP_IOC_GETOBJECTNAME', `0xc0186e09')
define(`NCP_IOC_GETPRIVATEDATA', `0xc0106e0a')
define(`NCP_IOC_GETROOT', `0x400c6e08')
define(`NCP_IOC_LOCKUNLOCK', `0x80146e07')
define(`NCP_IOC_NCPREQUEST', `0x80106e01')
define(`NCP_IOC_SETCHARSETS', `0x802a6e0b')
define(`NCP_IOC_SETDENTRYTTL', `0x80046e0c')
define(`NCP_IOC_SETOBJECTNAME', `0x80186e09')
define(`NCP_IOC_SETPRIVATEDATA', `0x80106e0a')
define(`NCP_IOC_SETROOT', `0x800c6e08')
define(`NCP_IOC_SET_SIGN_WANTED', `0x40046e06')
define(`NCP_IOC_SIGN_INIT', `0x80186e05')
define(`NCP_IOC_SIGN_WANTED', `0x80046e06')
define(`NET_ADD_IF', `0xc0066f34')
define(`NET_GET_IF', `0xc0066f36')
define(`NET_REMOVE_IF', `0x00006f35')
define(`NILFS_IOCTL_CHANGE_CPMODE', `0x40106e80')
define(`NILFS_IOCTL_CLEAN_SEGMENTS', `0x40786e88')
define(`NILFS_IOCTL_DELETE_CHECKPOINT', `0x40086e81')
define(`NILFS_IOCTL_GET_BDESCS', `0xc0186e87')
define(`NILFS_IOCTL_GET_CPINFO', `0x80186e82')
define(`NILFS_IOCTL_GET_CPSTAT', `0x80186e83')
define(`NILFS_IOCTL_GET_SUINFO', `0x80186e84')
define(`NILFS_IOCTL_GET_SUSTAT', `0x80306e85')
define(`NILFS_IOCTL_GET_VINFO', `0xc0186e86')
define(`NILFS_IOCTL_RESIZE', `0x40086e8b')
define(`NILFS_IOCTL_SET_ALLOC_RANGE', `0x40106e8c')
define(`NILFS_IOCTL_SET_SUINFO', `0x40186e8d')
define(`NILFS_IOCTL_SYNC', `0x80086e8a')
define(`NS_ADJBUFLEV', `0x00006163')
define(`NS_GETPSTAT', `0xc0106161')
define(`NS_SETBUFLEV', `0x40106162')
define(`NVME_IOCTL_ADMIN_CMD', `0xc0484e41')
define(`NVME_IOCTL_ID', `0x00004e40')
define(`NVME_IOCTL_IO_CMD', `0xc0484e43')
define(`NVME_IOCTL_SUBMIT_IO', `0x40304e42')
define(`NVRAM_INIT', `0x00007040')
define(`NVRAM_SETCKS', `0x00007041')
define(`OLD_PHONE_RING_START', `0x00007187')
define(`OMAPFB_CTRL_TEST', `0x40044f2e')
define(`OMAPFB_GET_CAPS', `0x800c4f2a')
define(`OMAPFB_GET_COLOR_KEY', `0x40104f33')
define(`OMAPFB_GET_DISPLAY_INFO', `0x80204f3f')
define(`OMAPFB_GET_OVERLAY_COLORMODE', `0x803c4f3b')
define(`OMAPFB_GET_UPDATE_MODE', `0x40044f2b')
define(`OMAPFB_GET_VRAM_INFO', `0x80204f3d')
define(`OMAPFB_LCD_TEST', `0x40044f2d')
define(`OMAPFB_MEMORY_READ', `0x80184f3a')
define(`OMAPFB_MIRROR', `0x40044f1f')
define(`OMAPFB_QUERY_MEM', `0x40084f38')
define(`OMAPFB_QUERY_PLANE', `0x40444f35')
define(`OMAPFB_SET_COLOR_KEY', `0x40104f32')
define(`OMAPFB_SET_TEARSYNC', `0x40084f3e')
define(`OMAPFB_SET_UPDATE_MODE', `0x40044f28')
define(`OMAPFB_SETUP_MEM', `0x40084f37')
define(`OMAPFB_SETUP_PLANE', `0x40444f34')
define(`OMAPFB_SYNC_GFX', `0x00004f25')
define(`OMAPFB_UPDATE_WINDOW', `0x40444f36')
define(`OMAPFB_UPDATE_WINDOW_OLD', `0x40144f2f')
define(`OMAPFB_VSYNC', `0x00004f26')
define(`OMAPFB_WAITFORGO', `0x00004f3c')
define(`OMAPFB_WAITFORVSYNC', `0x00004f39')
define(`OSD_GET_CAPABILITY', `0x80106fa1')
define(`OSD_SEND_CMD', `0x40206fa0')
define(`OSIOCGNETADDR', `0x800489e1')
define(`OSIOCSNETADDR', `0x400489e0')
define(`OSS_GETVERSION', `0x80044d76')
define(`OTPGETREGIONCOUNT', `0x40044d0e')
define(`OTPGETREGIONINFO', `0x400c4d0f')
define(`OTPLOCK', `0x800c4d10')
define(`OTPSELECT', `0x80044d0d')
define(`PACKET_CTRL_CMD', `0xc0185801')
define(`PERF_EVENT_IOC_DISABLE', `0x00002401')
define(`PERF_EVENT_IOC_ENABLE', `0x00002400')
define(`PERF_EVENT_IOC_ID', `0x80082407')
define(`PERF_EVENT_IOC_PERIOD', `0x40082404')
define(`PERF_EVENT_IOC_REFRESH', `0x00002402')
define(`PERF_EVENT_IOC_RESET', `0x00002403')
define(`PERF_EVENT_IOC_SET_FILTER', `0x40082406')
define(`PERF_EVENT_IOC_SET_OUTPUT', `0x00002405')
define(`PHN_GET_REG', `0xc0087000')
define(`PHN_GETREG', `0xc0087005')
define(`PHN_GET_REGS', `0xc0087002')
define(`PHN_GETREGS', `0xc0287007')
define(`PHN_NOT_OH', `0x00007004')
define(`PHN_SET_REG', `0x40087001')
define(`PHN_SETREG', `0x40087006')
define(`PHN_SET_REGS', `0x40087003')
define(`PHN_SETREGS', `0x40287008')
define(`PHONE_BUSY', `0x000071a1')
define(`PHONE_CAPABILITIES', `0x00007180')
define(`PHONE_CAPABILITIES_CHECK', `0x40087182')
define(`PHONE_CAPABILITIES_LIST', `0x80087181')
define(`PHONE_CPT_STOP', `0x000071a4')
define(`PHONE_DIALTONE', `0x000071a3')
define(`PHONE_DTMF_OOB', `0x40047199')
define(`PHONE_DTMF_READY', `0x80047196')
define(`PHONE_EXCEPTION', `0x8004719a')
define(`PHONE_FRAME', `0x4004718d')
define(`PHONE_GET_DTMF', `0x80047197')
define(`PHONE_GET_DTMF_ASCII', `0x80047198')
define(`PHONE_GET_TONE_OFF_TIME', `0x0000719f')
define(`PHONE_GET_TONE_ON_TIME', `0x0000719e')
define(`PHONE_GET_TONE_STATE', `0x000071a0')
define(`PHONE_HOOKSTATE', `0x00007184')
define(`PHONE_MAXRINGS', `0x40017185')
define(`PHONE_PLAY_CODEC', `0x40047190')
define(`PHONE_PLAY_DEPTH', `0x40047193')
define(`PHONE_PLAY_LEVEL', `0x00007195')
define(`PHONE_PLAY_START', `0x00007191')
define(`PHONE_PLAY_STOP', `0x00007192')
define(`PHONE_PLAY_TONE', `0x4001719b')
define(`PHONE_PLAY_VOLUME', `0x40047194')
define(`PHONE_PLAY_VOLUME_LINEAR', `0x400471dc')
define(`PHONE_PSTN_GET_STATE', `0x000071a5')
define(`PHONE_PSTN_LINETEST', `0x000071a8')
define(`PHONE_PSTN_SET_STATE', `0x400471a4')
define(`PHONE_QUERY_CODEC', `0xc00871a7')
define(`PHONE_REC_CODEC', `0x40047189')
define(`PHONE_REC_DEPTH', `0x4004718c')
define(`PHONE_REC_LEVEL', `0x0000718f')
define(`PHONE_REC_START', `0x0000718a')
define(`PHONE_REC_STOP', `0x0000718b')
define(`PHONE_REC_VOLUME', `0x4004718e')
define(`PHONE_REC_VOLUME_LINEAR', `0x400471db')
define(`PHONE_RING', `0x00007183')
define(`PHONE_RINGBACK', `0x000071a2')
define(`PHONE_RING_CADENCE', `0x40027186')
define(`PHONE_RING_START', `0x40087187')
define(`PHONE_RING_STOP', `0x00007188')
define(`PHONE_SET_TONE_OFF_TIME', `0x4004719d')
define(`PHONE_SET_TONE_ON_TIME', `0x4004719c')
define(`PHONE_VAD', `0x400471a9')
define(`PHONE_WINK', `0x400471aa')
define(`PHONE_WINK_DURATION', `0x400471a6')
define(`PIO_CMAP', `0x00004b71')
define(`PIO_FONT', `0x00004b61')
define(`PIO_FONTRESET', `0x00004b6d')
define(`PIO_FONTX', `0x00004b6c')
define(`PIO_SCRNMAP', `0x00004b41')
define(`PIO_UNIMAP', `0x00004b67')
define(`PIO_UNIMAPCLR', `0x00004b68')
define(`PIO_UNISCRNMAP', `0x00004b6a')
define(`PMU_IOC_CAN_SLEEP', `0x80084205')
define(`PMU_IOC_GET_BACKLIGHT', `0x80084201')
define(`PMU_IOC_GET_MODEL', `0x80084203')
define(`PMU_IOC_GRAB_BACKLIGHT', `0x80084206')
define(`PMU_IOC_HAS_ADB', `0x80084204')
define(`PMU_IOC_SET_BACKLIGHT', `0x40084202')
define(`PMU_IOC_SLEEP', `0x00004200')
define(`PPCLAIM', `0x0000708b')
define(`PPCLRIRQ', `0x80047093')
define(`PPDATADIR', `0x40047090')
define(`PPEXCL', `0x0000708f')
define(`PPFCONTROL', `0x4002708e')
define(`PPGETFLAGS', `0x8004709a')
define(`PPGETMODE', `0x80047098')
define(`PPGETMODES', `0x80047097')
define(`PPGETPHASE', `0x80047099')
define(`PPGETTIME', `0x80107095')
define(`PPNEGOT', `0x40047091')
define(`PPPIOCATTACH',       `0x743d')
define(`PPPIOCATTCHAN',      `0x7438')
define(`PPPIOCBUNDLE',       `0x7481')
define(`PPPIOCCONNECT',      `0x743a')
define(`PPPIOCDETACH',       `0x743c')
define(`PPPIOCDISCONN',      `0x7439')
define(`PPPIOCGASYNCMAP',    `0x7458')
define(`PPPIOCGCALLINFO',    `0x7480')
define(`PPPIOCGCHAN',        `0x7437')
define(`PPPIOCGCOMPRESSORS', `0x7486')
define(`PPPIOCGDEBUG',       `0x7441')
define(`PPPIOCGFLAGS',       `0x745a')
define(`PPPIOCGIDLE',        `0x743f')
define(`PPPIOCGIFNAME',      `0x7488')
define(`PPPIOCGL2TPSTATS',   `0x7436')
define(`PPPIOCGMPFLAGS',     `0x7482')
define(`PPPIOCGMRU',         `0x7453')
define(`PPPIOCGNPMODE',      `0x744c')
define(`PPPIOCGRASYNCMAP',   `0x7455')
define(`PPPIOCGUNIT',        `0x7456')
define(`PPPIOCGXASYNCMAP',   `0x7450')
define(`PPPIOCNEWUNIT',      `0x743e')
define(`PPPIOCSACTIVE',      `0x7446')
define(`PPPIOCSASYNCMAP',    `0x7457')
define(`PPPIOCSCOMPRESS',    `0x744d')
define(`PPPIOCSCOMPRESSOR',  `0x7487')
define(`PPPIOCSDEBUG',       `0x7440')
define(`PPPIOCSFLAGS',       `0x7459')
define(`PPPIOCSMAXCID',      `0x7451')
define(`PPPIOCSMPFLAGS',     `0x7483')
define(`PPPIOCSMPMRU',       `0x7485')
define(`PPPIOCSMPMTU',       `0x7484')
define(`PPPIOCSMRRU',        `0x743b')
define(`PPPIOCSMRU',         `0x7452')
define(`PPPIOCSNPMODE',      `0x744b')
define(`PPPIOCSPASS',        `0x7447')
define(`PPPIOCSRASYNCMAP',   `0x7454')
define(`PPPIOCSXASYNCMAP',   `0x744f')
define(`PPPIOCXFERUNIT',     `0x744e')
define(`PPPOEIOCDFWD', `0x0000b101')
define(`PPPOEIOCSFWD', `0x4008b100')
define(`PPRCONTROL', `0x80017083')
define(`PPRDATA', `0x80017085')
define(`PPRELEASE', `0x0000708c')
define(`PPRSTATUS', `0x80017081')
define(`PPSETFLAGS', `0x4004709b')
define(`PPSETMODE', `0x40047080')
define(`PPSETPHASE', `0x40047094')
define(`PPSETTIME', `0x40107096')
define(`PPS_FETCH', `0xc00870a4')
define(`PPS_GETCAP', `0x800870a3')
define(`PPS_GETPARAMS', `0x800870a1')
define(`PPS_KC_BIND', `0x400870a5')
define(`PPS_SETPARAMS', `0x400870a2')
define(`PPWCONTROL', `0x40017084')
define(`PPWCTLONIRQ', `0x40017092')
define(`PPWDATA', `0x40017086')
define(`PPYIELD', `0x0000708d')
define(`PROTECT_ARRAY', `0x00000927')
define(`PTP_CLOCK_GETCAPS', `0x80503d01')
define(`PTP_ENABLE_PPS', `0x40043d04')
define(`PTP_EXTTS_REQUEST', `0x40103d02')
define(`PTP_PEROUT_REQUEST', `0x40383d03')
define(`PTP_PIN_GETFUNC', `0xc0603d06')
define(`PTP_PIN_SETFUNC', `0x40603d07')
define(`PTP_SYS_OFFSET', `0x43403d05')
define(`RAID_AUTORUN', `0x00000914')
define(`RAID_VERSION', `0x800c0910')
define(`RAW_GETBIND', `0x0000ac01')
define(`RAW_SETBIND', `0x0000ac00')
define(`REISERFS_IOC_UNPACK', `0x4008cd01')
define(`RESTART_ARRAY_RW', `0x00000934')
define(`RFCOMMCREATEDEV', `0x400452c8')
define(`RFCOMMGETDEVINFO', `0x800452d3')
define(`RFCOMMGETDEVLIST', `0x800452d2')
define(`RFCOMMRELEASEDEV', `0x400452c9')
define(`RFCOMMSTEALDLC', `0x400452dc')
define(`RFKILL_IOCTL_NOINPUT', `0x00005201')
define(`RNDADDENTROPY', `0x40085203')
define(`RNDADDTOENTCNT', `0x40045201')
define(`RNDCLEARPOOL', `0x00005206')
define(`RNDGETENTCNT', `0x80045200')
define(`RNDGETPOOL', `0x80085202')
define(`RNDZAPENTCNT', `0x00005204')
define(`ROCCATIOCGREPSIZE', `0x800448f1')
define(`RTC_AIE_OFF', `0x00007002')
define(`RTC_AIE_ON', `0x00007001')
define(`RTC_ALM_READ', `0x80247008')
define(`RTC_ALM_SET', `0x40247007')
define(`RTC_EPOCH_READ', `0x8008700d')
define(`RTC_EPOCH_SET', `0x4008700e')
define(`RTC_IRQP_READ', `0x8008700b')
define(`RTC_IRQP_SET', `0x4008700c')
define(`RTC_PIE_OFF', `0x00007006')
define(`RTC_PIE_ON', `0x00007005')
define(`RTC_PLL_GET', `0x80207011')
define(`RTC_PLL_SET', `0x40207012')
define(`RTC_RD_TIME', `0x80247009')
define(`RTC_SET_TIME', `0x4024700a')
define(`RTC_UIE_OFF', `0x00007004')
define(`RTC_UIE_ON', `0x00007003')
define(`RTC_VL_CLR', `0x00007014')
define(`RTC_VL_READ', `0x80047013')
define(`RTC_WIE_OFF', `0x00007010')
define(`RTC_WIE_ON', `0x0000700f')
define(`RTC_WKALM_RD', `0x80287010')
define(`RTC_WKALM_SET', `0x4028700f')
define(`RUN_ARRAY', `0x400c0930')
define(`S5P_FIMC_TX_END_NOTIFY', `0x00006500')
define(`SAA6588_CMD_CLOSE', `0x40045202')
define(`SAA6588_CMD_POLL', `0x80045204')
define(`SAA6588_CMD_READ', `0x80045203')
define(`SCSI_IOCTL_DOORLOCK', `0x00005380')
define(`SCSI_IOCTL_DOORUNLOCK', `0x00005381')
define(`SCSI_IOCTL_GET_BUS_NUMBER', `0x00005386')
define(`SCSI_IOCTL_GET_IDLUN', `0x00005382')
define(`SCSI_IOCTL_GET_PCI', `0x00005387')
define(`SCSI_IOCTL_PROBE_HOST', `0x00005385')
define(`SET_ARRAY_INFO', `0x40480923')
define(`SET_BITMAP_FILE', `0x4004092b')
define(`SET_DISK_FAULTY', `0x00000929')
define(`SET_DISK_INFO', `0x00000924')
define(`SG_EMULATED_HOST', `0x00002203')
define(`SG_GET_ACCESS_COUNT', `0x00002289')
define(`SG_GET_COMMAND_Q', `0x00002270')
define(`SG_GET_KEEP_ORPHAN', `0x00002288')
define(`SG_GET_LOW_DMA', `0x0000227a')
define(`SG_GET_NUM_WAITING', `0x0000227d')
define(`SG_GET_PACK_ID', `0x0000227c')
define(`SG_GET_REQUEST_TABLE', `0x00002286')
define(`SG_GET_RESERVED_SIZE', `0x00002272')
define(`SG_GET_SCSI_ID', `0x00002276')
define(`SG_GET_SG_TABLESIZE', `0x0000227f')
define(`SG_GET_TIMEOUT', `0x00002202')
define(`SG_GET_TRANSFORM', `0x00002205')
define(`SG_GET_VERSION_NUM', `0x00002282')
define(`SG_IO', `0x00002285')
define(`SG_NEXT_CMD_LEN', `0x00002283')
define(`SG_SCSI_RESET', `0x00002284')
define(`SG_SET_COMMAND_Q', `0x00002271')
define(`SG_SET_DEBUG', `0x0000227e')
define(`SG_SET_FORCE_LOW_DMA', `0x00002279')
define(`SG_SET_FORCE_PACK_ID', `0x0000227b')
define(`SG_SET_KEEP_ORPHAN', `0x00002287')
define(`SG_SET_RESERVED_SIZE', `0x00002275')
define(`SG_SET_TIMEOUT', `0x00002201')
define(`SG_SET_TRANSFORM', `0x00002204')
define(`SI4713_IOC_MEASURE_RNL', `0xc01c56c0')
define(`SIOCADDDLCI', `0x00008980')
define(`SIOCADDMULTI', `0x00008931')
define(`SIOCADDRT', `0x0000890b')
define(`SIOCATMARK', `0x00008905')
define(`SIOCBONDCHANGEACTIVE', `0x00008995')
define(`SIOCBONDENSLAVE', `0x00008990')
define(`SIOCBONDINFOQUERY', `0x00008994')
define(`SIOCBONDRELEASE', `0x00008991')
define(`SIOCBONDSETHWADDR', `0x00008992')
define(`SIOCBONDSLAVEINFOQUERY', `0x00008993')
define(`SIOCBRADDBR', `0x000089a0')
define(`SIOCBRADDIF', `0x000089a2')
define(`SIOCBRDELBR', `0x000089a1')
define(`SIOCBRDELIF', `0x000089a3')
define(`SIOCDARP', `0x00008953')
define(`SIOCDELDLCI', `0x00008981')
define(`SIOCDELMULTI', `0x00008932')
define(`SIOCDELRT', `0x0000890c')
define(`SIOCDEVPRIVATE', `0x000089f0')
define(`SIOCDEVPRIVATE_1', `0x000089f1')
define(`SIOCDEVPRIVATE_2', `0x000089f2')
define(`SIOCDEVPRIVATE_3', `0x000089f3')
define(`SIOCDEVPRIVATE_4', `0x000089f4')
define(`SIOCDEVPRIVATE_5', `0x000089f5')
define(`SIOCDEVPRIVATE_6', `0x000089f6')
define(`SIOCDEVPRIVATE_7', `0x000089f7')
define(`SIOCDEVPRIVATE_8', `0x000089f8')
define(`SIOCDEVPRIVATE_9', `0x000089f9')
define(`SIOCDEVPRIVATE_A', `0x000089fa')
define(`SIOCDEVPRIVATE_B', `0x000089fb')
define(`SIOCDEVPRIVATE_C', `0x000089fc')
define(`SIOCDEVPRIVATE_D', `0x000089fd')
define(`SIOCDEVPRIVATE_E', `0x000089fe')
define(`SIOCDEVPRIVLAST', `0x000089ff')
define(`SIOCDIFADDR', `0x00008936')
define(`SIOCDRARP', `0x00008960')
define(`SIOCETHTOOL', `0x00008946')
define(`SIOCGARP', `0x00008954')
define(`SIOCGHWTSTAMP', `0x000089b1')
define(`SIOCGIFADDR', `0x00008915')
define(`SIOCGIFBR', `0x00008940')
define(`SIOCGIFBRDADDR', `0x00008919')
define(`SIOCGIFCONF', `0x00008912')
define(`SIOCGIFCOUNT', `0x00008938')
define(`SIOCGIFDSTADDR', `0x00008917')
define(`SIOCGIFENCAP', `0x00008925')
define(`SIOCGIFFLAGS', `0x00008913')
define(`SIOCGIFHWADDR', `0x00008927')
define(`SIOCGIFINDEX', `0x00008933')
define(`SIOCGIFMAP', `0x00008970')
define(`SIOCGIFMEM', `0x0000891f')
define(`SIOCGIFMETRIC', `0x0000891d')
define(`SIOCGIFMTU', `0x00008921')
define(`SIOCGIFNAME', `0x00008910')
define(`SIOCGIFNETMASK', `0x0000891b')
define(`SIOCGIFPFLAGS', `0x00008935')
define(`SIOCGIFSLAVE', `0x00008929')
define(`SIOCGIFTXQLEN', `0x00008942')
define(`SIOCGIFVLAN', `0x00008982')
define(`SIOCGIWAP', `0x00008b15')
define(`SIOCGIWAPLIST', `0x00008b17')
define(`SIOCGIWAUTH', `0x00008b33')
define(`SIOCGIWENCODE', `0x00008b2b')
define(`SIOCGIWENCODEEXT', `0x00008b35')
define(`SIOCGIWESSID', `0x00008b1b')
define(`SIOCGIWFRAG', `0x00008b25')
define(`SIOCGIWFREQ', `0x00008b05')
define(`SIOCGIWGENIE', `0x00008b31')
define(`SIOCGIWMODE', `0x00008b07')
define(`SIOCGIWNAME', `0x00008b01')
define(`SIOCGIWNICKN', `0x00008b1d')
define(`SIOCGIWNWID', `0x00008b03')
define(`SIOCGIWPOWER', `0x00008b2d')
define(`SIOCGIWPRIV', `0x00008b0d')
define(`SIOCGIWRANGE', `0x00008b0b')
define(`SIOCGIWRATE', `0x00008b21')
define(`SIOCGIWRETRY', `0x00008b29')
define(`SIOCGIWRTS', `0x00008b23')
define(`SIOCGIWSCAN', `0x00008b19')
define(`SIOCGIWSENS', `0x00008b09')
define(`SIOCGIWSPY', `0x00008b11')
define(`SIOCGIWSTATS', `0x00008b0f')
define(`SIOCGIWTHRSPY', `0x00008b13')
define(`SIOCGIWTXPOW', `0x00008b27')
define(`SIOCGMIIPHY', `0x00008947')
define(`SIOCGMIIREG', `0x00008948')
define(`SIOCGNETADDR', `0x800489e1')
define(`SIOCGPGRP', `0x00008904')
define(`SIOCGRARP', `0x00008961')
define(`SIOCGSTAMP', `0x00008906')
define(`SIOCGSTAMPNS', `0x00008907')
define(`SIOCIWFIRST', `0x00008b00')
define(`SIOCIWFIRSTPRIV_01', `0x00008be1')
define(`SIOCIWFIRSTPRIV_02', `0x00008be2')
define(`SIOCIWFIRSTPRIV_03', `0x00008be3')
define(`SIOCIWFIRSTPRIV_04', `0x00008be4')
define(`SIOCIWFIRSTPRIV_05', `0x00008be5')
define(`SIOCIWFIRSTPRIV_06', `0x00008be6')
define(`SIOCIWFIRSTPRIV_07', `0x00008be7')
define(`SIOCIWFIRSTPRIV_08', `0x00008be8')
define(`SIOCIWFIRSTPRIV_09', `0x00008be9')
define(`SIOCIWFIRSTPRIV_0A', `0x00008bea')
define(`SIOCIWFIRSTPRIV_0B', `0x00008beb')
define(`SIOCIWFIRSTPRIV_0C', `0x00008bec')
define(`SIOCIWFIRSTPRIV_0D', `0x00008bed')
define(`SIOCIWFIRSTPRIV_0E', `0x00008bee')
define(`SIOCIWFIRSTPRIV_0F', `0x00008bef')
define(`SIOCIWFIRSTPRIV', `0x00008be0')
define(`SIOCIWFIRSTPRIV_10', `0x00008bf0')
define(`SIOCIWFIRSTPRIV_11', `0x00008bf1')
define(`SIOCIWFIRSTPRIV_12', `0x00008bf2')
define(`SIOCIWFIRSTPRIV_13', `0x00008bf3')
define(`SIOCIWFIRSTPRIV_14', `0x00008bf4')
define(`SIOCIWFIRSTPRIV_15', `0x00008bf5')
define(`SIOCIWFIRSTPRIV_16', `0x00008bf6')
define(`SIOCIWFIRSTPRIV_17', `0x00008bf7')
define(`SIOCIWFIRSTPRIV_18', `0x00008bf8')
define(`SIOCIWFIRSTPRIV_19', `0x00008bf9')
define(`SIOCIWFIRSTPRIV_1A', `0x00008bfa')
define(`SIOCIWFIRSTPRIV_1B', `0x00008bfb')
define(`SIOCIWFIRSTPRIV_1C', `0x00008bfc')
define(`SIOCIWFIRSTPRIV_1D', `0x00008bfd')
define(`SIOCIWFIRSTPRIV_1E', `0x00008bfe')
define(`SIOCIWLASTPRIV', `0x00008bff')
define(`SIOCKILLADDR', `0x00008939')
define(`SIOCMKCLIP', `0x000061e0')
define(`SIOCOUTQNSD', `0x0000894b')
define(`SIOCPROTOPRIVATE', `0x000089e0')
define(`SIOCPROTOPRIVATE_1', `0x000089e1')
define(`SIOCPROTOPRIVATE_2', `0x000089e2')
define(`SIOCPROTOPRIVATE_3', `0x000089e3')
define(`SIOCPROTOPRIVATE_4', `0x000089e4')
define(`SIOCPROTOPRIVATE_5', `0x000089e5')
define(`SIOCPROTOPRIVATE_6', `0x000089e6')
define(`SIOCPROTOPRIVATE_7', `0x000089e7')
define(`SIOCPROTOPRIVATE_8', `0x000089e8')
define(`SIOCPROTOPRIVATE_9', `0x000089e9')
define(`SIOCPROTOPRIVATE_A', `0x000089ea')
define(`SIOCPROTOPRIVATE_B', `0x000089eb')
define(`SIOCPROTOPRIVATE_C', `0x000089ec')
define(`SIOCPROTOPRIVATE_D', `0x000089ed')
define(`SIOCPROTOPRIVATE_E', `0x000089ee')
define(`SIOCPROTOPRIVLAST', `0x000089ef')
define(`SIOCRTMSG', `0x0000890d')
define(`SIOCSARP', `0x00008955')
define(`SIOCSHWTSTAMP', `0x000089b0')
define(`SIOCSIFADDR', `0x00008916')
define(`SIOCSIFATMTCP', `0x00006180')
define(`SIOCSIFBR', `0x00008941')
define(`SIOCSIFBRDADDR', `0x0000891a')
define(`SIOCSIFDSTADDR', `0x00008918')
define(`SIOCSIFENCAP', `0x00008926')
define(`SIOCSIFFLAGS', `0x00008914')
define(`SIOCSIFHWADDR', `0x00008924')
define(`SIOCSIFHWBROADCAST', `0x00008937')
define(`SIOCSIFLINK', `0x00008911')
define(`SIOCSIFMAP', `0x00008971')
define(`SIOCSIFMEM', `0x00008920')
define(`SIOCSIFMETRIC', `0x0000891e')
define(`SIOCSIFMTU', `0x00008922')
define(`SIOCSIFNAME', `0x00008923')
define(`SIOCSIFNETMASK', `0x0000891c')
define(`SIOCSIFPFLAGS', `0x00008934')
define(`SIOCSIFSLAVE', `0x00008930')
define(`SIOCSIFTXQLEN', `0x00008943')
define(`SIOCSIFVLAN', `0x00008983')
define(`SIOCSIWAP', `0x00008b14')
define(`SIOCSIWAUTH', `0x00008b32')
define(`SIOCSIWCOMMIT', `0x00008b00')
define(`SIOCSIWENCODE', `0x00008b2a')
define(`SIOCSIWENCODEEXT', `0x00008b34')
define(`SIOCSIWESSID', `0x00008b1a')
define(`SIOCSIWFRAG', `0x00008b24')
define(`SIOCSIWFREQ', `0x00008b04')
define(`SIOCSIWGENIE', `0x00008b30')
define(`SIOCSIWMLME', `0x00008b16')
define(`SIOCSIWMODE', `0x00008b06')
define(`SIOCSIWNICKN', `0x00008b1c')
define(`SIOCSIWNWID', `0x00008b02')
define(`SIOCSIWPMKSA', `0x00008b36')
define(`SIOCSIWPOWER', `0x00008b2c')
define(`SIOCSIWPRIV', `0x00008b0c')
define(`SIOCSIWRANGE', `0x00008b0a')
define(`SIOCSIWRATE', `0x00008b20')
define(`SIOCSIWRETRY', `0x00008b28')
define(`SIOCSIWRTS', `0x00008b22')
define(`SIOCSIWSCAN', `0x00008b18')
define(`SIOCSIWSENS', `0x00008b08')
define(`SIOCSIWSPY', `0x00008b10')
define(`SIOCSIWSTATS', `0x00008b0e')
define(`SIOCSIWTHRSPY', `0x00008b12')
define(`SIOCSIWTXPOW', `0x00008b26')
define(`SIOCSMIIREG', `0x00008949')
define(`SIOCSNETADDR', `0x400489e0')
define(`SIOCSPGRP', `0x00008902')
define(`SIOCSRARP', `0x00008962')
define(`SIOCWANDEV', `0x0000894a')
define(`SISFB_COMMAND', `0xc054f305')
define(`SISFB_GET_AUTOMAXIMIZE', `0x8004f303')
define(`SISFB_GET_AUTOMAXIMIZE_OLD', `0x80046efa')
define(`SISFB_GET_INFO', `0x811cf301')
define(`SISFB_GET_INFO_OLD', `0x80046ef8')
define(`SISFB_GET_INFO_SIZE', `0x8004f300')
define(`SISFB_GET_TVPOSOFFSET', `0x8004f304')
define(`SISFB_GET_VBRSTATUS', `0x8004f302')
define(`SISFB_GET_VBRSTATUS_OLD', `0x80046ef9')
define(`SISFB_SET_AUTOMAXIMIZE', `0x4004f303')
define(`SISFB_SET_AUTOMAXIMIZE_OLD', `0x40046efa')
define(`SISFB_SET_LOCK', `0x4004f306')
define(`SISFB_SET_TVPOSOFFSET', `0x4004f304')
define(`SNAPSHOT_ALLOC_SWAP_PAGE', `0x80083314')
define(`SNAPSHOT_ATOMIC_RESTORE', `0x00003304')
define(`SNAPSHOT_AVAIL_SWAP_SIZE', `0x80083313')
define(`SNAPSHOT_CREATE_IMAGE', `0x40043311')
define(`SNAPSHOT_FREE', `0x00003305')
define(`SNAPSHOT_FREE_SWAP_PAGES', `0x00003309')
define(`SNAPSHOT_FREEZE', `0x00003301')
define(`SNAPSHOT_GET_IMAGE_SIZE', `0x8008330e')
define(`SNAPSHOT_PLATFORM_SUPPORT', `0x0000330f')
define(`SNAPSHOT_POWER_OFF', `0x00003310')
define(`SNAPSHOT_PREF_IMAGE_SIZE', `0x00003312')
define(`SNAPSHOT_S2RAM', `0x0000330b')
define(`SNAPSHOT_SET_SWAP_AREA', `0x400c330d')
define(`SNAPSHOT_UNFREEZE', `0x00003302')
define(`SNDCTL_COPR_HALT', `0xc0144307')
define(`SNDCTL_COPR_LOAD', `0xcfb04301')
define(`SNDCTL_COPR_RCODE', `0xc0144303')
define(`SNDCTL_COPR_RCVMSG', `0x8fa44309')
define(`SNDCTL_COPR_RDATA', `0xc0144302')
define(`SNDCTL_COPR_RESET', `0x00004300')
define(`SNDCTL_COPR_RUN', `0xc0144306')
define(`SNDCTL_COPR_SENDMSG', `0xcfa44308')
define(`SNDCTL_COPR_WCODE', `0x40144305')
define(`SNDCTL_COPR_WDATA', `0x40144304')
define(`SNDCTL_DSP_BIND_CHANNEL', `0xc0045041')
define(`SNDCTL_DSP_CHANNELS', `0xc0045006')
define(`SNDCTL_DSP_GETBLKSIZE', `0xc0045004')
define(`SNDCTL_DSP_GETCAPS', `0x8004500f')
define(`SNDCTL_DSP_GETCHANNELMASK', `0xc0045040')
define(`SNDCTL_DSP_GETFMTS', `0x8004500b')
define(`SNDCTL_DSP_GETIPTR', `0x800c5011')
define(`SNDCTL_DSP_GETISPACE', `0x8010500d')
define(`SNDCTL_DSP_GETODELAY', `0x80045017')
define(`SNDCTL_DSP_GETOPTR', `0x800c5012')
define(`SNDCTL_DSP_GETOSPACE', `0x8010500c')
define(`SNDCTL_DSP_GETSPDIF', `0x80045043')
define(`SNDCTL_DSP_GETTRIGGER', `0x80045010')
define(`SNDCTL_DSP_MAPINBUF', `0x80105013')
define(`SNDCTL_DSP_MAPOUTBUF', `0x80105014')
define(`SNDCTL_DSP_NONBLOCK', `0x0000500e')
define(`SNDCTL_DSP_POST', `0x00005008')
define(`SNDCTL_DSP_PROFILE', `0x40045017')
define(`SNDCTL_DSP_RESET', `0x00005000')
define(`SNDCTL_DSP_SETDUPLEX', `0x00005016')
define(`SNDCTL_DSP_SETFMT', `0xc0045005')
define(`SNDCTL_DSP_SETFRAGMENT', `0xc004500a')
define(`SNDCTL_DSP_SETSPDIF', `0x40045042')
define(`SNDCTL_DSP_SETSYNCRO', `0x00005015')
define(`SNDCTL_DSP_SETTRIGGER', `0x40045010')
define(`SNDCTL_DSP_SPEED', `0xc0045002')
define(`SNDCTL_DSP_STEREO', `0xc0045003')
define(`SNDCTL_DSP_SUBDIVIDE', `0xc0045009')
define(`SNDCTL_DSP_SYNC', `0x00005001')
define(`SNDCTL_FM_4OP_ENABLE', `0x4004510f')
define(`SNDCTL_FM_LOAD_INSTR', `0x40285107')
define(`SNDCTL_MIDI_INFO', `0xc074510c')
define(`SNDCTL_MIDI_MPUCMD', `0xc0216d02')
define(`SNDCTL_MIDI_MPUMODE', `0xc0046d01')
define(`SNDCTL_MIDI_PRETIME', `0xc0046d00')
define(`SNDCTL_SEQ_CTRLRATE', `0xc0045103')
define(`SNDCTL_SEQ_GETINCOUNT', `0x80045105')
define(`SNDCTL_SEQ_GETOUTCOUNT', `0x80045104')
define(`SNDCTL_SEQ_GETTIME', `0x80045113')
define(`SNDCTL_SEQ_NRMIDIS', `0x8004510b')
define(`SNDCTL_SEQ_NRSYNTHS', `0x8004510a')
define(`SNDCTL_SEQ_OUTOFBAND', `0x40085112')
define(`SNDCTL_SEQ_PANIC', `0x00005111')
define(`SNDCTL_SEQ_PERCMODE', `0x40045106')
define(`SNDCTL_SEQ_RESET', `0x00005100')
define(`SNDCTL_SEQ_RESETSAMPLES', `0x40045109')
define(`SNDCTL_SEQ_SYNC', `0x00005101')
define(`SNDCTL_SEQ_TESTMIDI', `0x40045108')
define(`SNDCTL_SEQ_THRESHOLD', `0x4004510d')
define(`SNDCTL_SYNTH_CONTROL', `0xcfa45115')
define(`SNDCTL_SYNTH_ID', `0xc08c5114')
define(`SNDCTL_SYNTH_INFO', `0xc08c5102')
define(`SNDCTL_SYNTH_MEMAVL', `0xc004510e')
define(`SNDCTL_SYNTH_REMOVESAMPLE', `0xc00c5116')
define(`SNDCTL_TMR_CONTINUE', `0x00005404')
define(`SNDCTL_TMR_METRONOME', `0x40045407')
define(`SNDCTL_TMR_SELECT', `0x40045408')
define(`SNDCTL_TMR_SOURCE', `0xc0045406')
define(`SNDCTL_TMR_START', `0x00005402')
define(`SNDCTL_TMR_STOP', `0x00005403')
define(`SNDCTL_TMR_TEMPO', `0xc0045405')
define(`SNDCTL_TMR_TIMEBASE', `0xc0045401')
define(`SNDRV_COMPRESS_AVAIL', `0x801c4321')
define(`SNDRV_COMPRESS_DRAIN', `0x00004334')
define(`SNDRV_COMPRESS_GET_CAPS', `0xc0c44310')
define(`SNDRV_COMPRESS_GET_CODEC_CAPS', `0xeb884311')
define(`SNDRV_COMPRESS_GET_METADATA', `0xc0244315')
define(`SNDRV_COMPRESS_GET_PARAMS', `0x80784313')
define(`SNDRV_COMPRESS_IOCTL_VERSION', `0x80044300')
define(`SNDRV_COMPRESS_NEXT_TRACK', `0x00004335')
define(`SNDRV_COMPRESS_PARTIAL_DRAIN', `0x00004336')
define(`SNDRV_COMPRESS_PAUSE', `0x00004330')
define(`SNDRV_COMPRESS_RESUME', `0x00004331')
define(`SNDRV_COMPRESS_SET_METADATA', `0x40244314')
define(`SNDRV_COMPRESS_SET_PARAMS', `0x40844312')
define(`SNDRV_COMPRESS_START', `0x00004332')
define(`SNDRV_COMPRESS_STOP', `0x00004333')
define(`SNDRV_COMPRESS_TSTAMP', `0x80144320')
define(`SNDRV_CTL_IOCTL_CARD_INFO', `0x81785501')
define(`SNDRV_CTL_IOCTL_ELEM_ADD', `0xc1105517')
define(`SNDRV_CTL_IOCTL_ELEM_INFO', `0xc1105511')
define(`SNDRV_CTL_IOCTL_ELEM_LIST', `0xc0505510')
define(`SNDRV_CTL_IOCTL_ELEM_LOCK', `0x40405514')
define(`SNDRV_CTL_IOCTL_ELEM_READ', `0xc4c85512')
define(`SNDRV_CTL_IOCTL_ELEM_REMOVE', `0xc0405519')
define(`SNDRV_CTL_IOCTL_ELEM_REPLACE', `0xc1105518')
define(`SNDRV_CTL_IOCTL_ELEM_UNLOCK', `0x40405515')
define(`SNDRV_CTL_IOCTL_ELEM_WRITE', `0xc4c85513')
define(`SNDRV_CTL_IOCTL_HWDEP_INFO', `0x80dc5521')
define(`SNDRV_CTL_IOCTL_HWDEP_NEXT_DEVICE', `0xc0045520')
define(`SNDRV_CTL_IOCTL_PCM_INFO', `0xc1205531')
define(`SNDRV_CTL_IOCTL_PCM_NEXT_DEVICE', `0x80045530')
define(`SNDRV_CTL_IOCTL_PCM_PREFER_SUBDEVICE', `0x40045532')
define(`SNDRV_CTL_IOCTL_POWER', `0xc00455d0')
define(`SNDRV_CTL_IOCTL_POWER_STATE', `0x800455d1')
define(`SNDRV_CTL_IOCTL_PVERSION', `0x80045500')
define(`SNDRV_CTL_IOCTL_RAWMIDI_INFO', `0xc10c5541')
define(`SNDRV_CTL_IOCTL_RAWMIDI_NEXT_DEVICE', `0xc0045540')
define(`SNDRV_CTL_IOCTL_RAWMIDI_PREFER_SUBDEVICE', `0x40045542')
define(`SNDRV_CTL_IOCTL_SUBSCRIBE_EVENTS', `0xc0045516')
define(`SNDRV_CTL_IOCTL_TLV_COMMAND', `0xc008551c')
define(`SNDRV_CTL_IOCTL_TLV_READ', `0xc008551a')
define(`SNDRV_CTL_IOCTL_TLV_WRITE', `0xc008551b')
define(`SNDRV_DM_FM_IOCTL_CLEAR_PATCHES', `0x00004840')
define(`SNDRV_DM_FM_IOCTL_INFO', `0x80024820')
define(`SNDRV_DM_FM_IOCTL_PLAY_NOTE', `0x400c4822')
define(`SNDRV_DM_FM_IOCTL_RESET', `0x00004821')
define(`SNDRV_DM_FM_IOCTL_SET_CONNECTION', `0x40044826')
define(`SNDRV_DM_FM_IOCTL_SET_MODE', `0x40044825')
define(`SNDRV_DM_FM_IOCTL_SET_PARAMS', `0x40094824')
define(`SNDRV_DM_FM_IOCTL_SET_VOICE', `0x40124823')
define(`SNDRV_EMU10K1_IOCTL_CODE_PEEK', `0xc1b04812')
define(`SNDRV_EMU10K1_IOCTL_CODE_POKE', `0x41b04811')
define(`SNDRV_EMU10K1_IOCTL_CONTINUE', `0x00004881')
define(`SNDRV_EMU10K1_IOCTL_DBG_READ', `0x80044884')
define(`SNDRV_EMU10K1_IOCTL_INFO', `0x880c4810')
define(`SNDRV_EMU10K1_IOCTL_PCM_PEEK', `0xc0484831')
define(`SNDRV_EMU10K1_IOCTL_PCM_POKE', `0x40484830')
define(`SNDRV_EMU10K1_IOCTL_PVERSION', `0x80044840')
define(`SNDRV_EMU10K1_IOCTL_SINGLE_STEP', `0x40044883')
define(`SNDRV_EMU10K1_IOCTL_STOP', `0x00004880')
define(`SNDRV_EMU10K1_IOCTL_TRAM_PEEK', `0xc0104822')
define(`SNDRV_EMU10K1_IOCTL_TRAM_POKE', `0x40104821')
define(`SNDRV_EMU10K1_IOCTL_TRAM_SETUP', `0x40044820')
define(`SNDRV_EMU10K1_IOCTL_ZERO_TRAM_COUNTER', `0x00004882')
define(`SNDRV_EMUX_IOCTL_LOAD_PATCH', `0xc0104881')
define(`SNDRV_EMUX_IOCTL_MEM_AVAIL', `0x40044884')
define(`SNDRV_EMUX_IOCTL_MISC_MODE', `0xc0104884')
define(`SNDRV_EMUX_IOCTL_REMOVE_LAST_SAMPLES', `0x00004883')
define(`SNDRV_EMUX_IOCTL_RESET_SAMPLES', `0x00004882')
define(`SNDRV_EMUX_IOCTL_VERSION', `0x80044880')
define(`SNDRV_FIREWIRE_IOCTL_GET_INFO', `0x802048f8')
define(`SNDRV_FIREWIRE_IOCTL_LOCK', `0x000048f9')
define(`SNDRV_FIREWIRE_IOCTL_UNLOCK', `0x000048fa')
define(`SNDRV_HDSP_IOCTL_GET_9632_AEB', `0x80084845')
define(`SNDRV_HDSP_IOCTL_GET_CONFIG_INFO', `0x80244841')
define(`SNDRV_HDSP_IOCTL_GET_MIXER', `0x90004844')
define(`SNDRV_HDSP_IOCTL_GET_PEAK_RMS', `0x83b04840')
define(`SNDRV_HDSP_IOCTL_GET_VERSION', `0x80084843')
define(`SNDRV_HDSP_IOCTL_UPLOAD_FIRMWARE', `0x40084842')
define(`SNDRV_HDSPM_IOCTL_GET_CONFIG', `0x80184841')
define(`SNDRV_HDSPM_IOCTL_GET_LTC', `0x80104846')
define(`SNDRV_HDSPM_IOCTL_GET_MIXER', `0x80084844')
define(`SNDRV_HDSPM_IOCTL_GET_PEAK_RMS', `0x89084842')
define(`SNDRV_HDSPM_IOCTL_GET_STATUS', `0x80204847')
define(`SNDRV_HDSPM_IOCTL_GET_VERSION', `0x80244848')
define(`SNDRV_HWDEP_IOCTL_DSP_LOAD', `0x40604803')
define(`SNDRV_HWDEP_IOCTL_DSP_STATUS', `0x80404802')
define(`SNDRV_HWDEP_IOCTL_INFO', `0x80dc4801')
define(`SNDRV_HWDEP_IOCTL_PVERSION', `0x80044800')
define(`SNDRV_PCM_IOCTL_CHANNEL_INFO', `0x80184132')
define(`SNDRV_PCM_IOCTL_DELAY', `0x80084121')
define(`SNDRV_PCM_IOCTL_DRAIN', `0x00004144')
define(`SNDRV_PCM_IOCTL_DROP', `0x00004143')
define(`SNDRV_PCM_IOCTL_FORWARD', `0x40084149')
define(`SNDRV_PCM_IOCTL_HW_FREE', `0x00004112')
define(`SNDRV_PCM_IOCTL_HW_PARAMS', `0xc2604111')
define(`SNDRV_PCM_IOCTL_HW_REFINE', `0xc2604110')
define(`SNDRV_PCM_IOCTL_HWSYNC', `0x00004122')
define(`SNDRV_PCM_IOCTL_INFO', `0x81204101')
define(`SNDRV_PCM_IOCTL_LINK', `0x40044160')
define(`SNDRV_PCM_IOCTL_PAUSE', `0x40044145')
define(`SNDRV_PCM_IOCTL_PREPARE', `0x00004140')
define(`SNDRV_PCM_IOCTL_PVERSION', `0x80044100')
define(`SNDRV_PCM_IOCTL_READI_FRAMES', `0x80184151')
define(`SNDRV_PCM_IOCTL_READN_FRAMES', `0x80184153')
define(`SNDRV_PCM_IOCTL_RESET', `0x00004141')
define(`SNDRV_PCM_IOCTL_RESUME', `0x00004147')
define(`SNDRV_PCM_IOCTL_REWIND', `0x40084146')
define(`SNDRV_PCM_IOCTL_START', `0x00004142')
define(`SNDRV_PCM_IOCTL_STATUS', `0x80984120')
define(`SNDRV_PCM_IOCTL_SW_PARAMS', `0xc0884113')
define(`SNDRV_PCM_IOCTL_SYNC_PTR', `0xc0884123')
define(`SNDRV_PCM_IOCTL_TSTAMP', `0x40044102')
define(`SNDRV_PCM_IOCTL_TTSTAMP', `0x40044103')
define(`SNDRV_PCM_IOCTL_UNLINK', `0x00004161')
define(`SNDRV_PCM_IOCTL_WRITEI_FRAMES', `0x40184150')
define(`SNDRV_PCM_IOCTL_WRITEN_FRAMES', `0x40184152')
define(`SNDRV_PCM_IOCTL_XRUN', `0x00004148')
define(`SNDRV_RAWMIDI_IOCTL_DRAIN', `0x40045731')
define(`SNDRV_RAWMIDI_IOCTL_DROP', `0x40045730')
define(`SNDRV_RAWMIDI_IOCTL_INFO', `0x810c5701')
define(`SNDRV_RAWMIDI_IOCTL_PARAMS', `0xc0305710')
define(`SNDRV_RAWMIDI_IOCTL_PVERSION', `0x80045700')
define(`SNDRV_RAWMIDI_IOCTL_STATUS', `0xc0385720')
define(`SNDRV_SB_CSP_IOCTL_INFO', `0x80284810')
define(`SNDRV_SB_CSP_IOCTL_LOAD_CODE', `0x70124811')
define(`SNDRV_SB_CSP_IOCTL_PAUSE', `0x00004815')
define(`SNDRV_SB_CSP_IOCTL_RESTART', `0x00004816')
define(`SNDRV_SB_CSP_IOCTL_START', `0x40084813')
define(`SNDRV_SB_CSP_IOCTL_STOP', `0x00004814')
define(`SNDRV_SB_CSP_IOCTL_UNLOAD_CODE', `0x00004812')
define(`SNDRV_SEQ_IOCTL_CLIENT_ID', `0x80045301')
define(`SNDRV_SEQ_IOCTL_CREATE_PORT', `0xc0a85320')
define(`SNDRV_SEQ_IOCTL_CREATE_QUEUE', `0xc08c5332')
define(`SNDRV_SEQ_IOCTL_DELETE_PORT', `0x40a85321')
define(`SNDRV_SEQ_IOCTL_DELETE_QUEUE', `0x408c5333')
define(`SNDRV_SEQ_IOCTL_GET_CLIENT_INFO', `0xc0bc5310')
define(`SNDRV_SEQ_IOCTL_GET_CLIENT_POOL', `0xc058534b')
define(`SNDRV_SEQ_IOCTL_GET_NAMED_QUEUE', `0xc08c5336')
define(`SNDRV_SEQ_IOCTL_GET_PORT_INFO', `0xc0a85322')
define(`SNDRV_SEQ_IOCTL_GET_QUEUE_CLIENT', `0xc04c5349')
define(`SNDRV_SEQ_IOCTL_GET_QUEUE_INFO', `0xc08c5334')
define(`SNDRV_SEQ_IOCTL_GET_QUEUE_OWNER', `0xc0005343')
define(`SNDRV_SEQ_IOCTL_GET_QUEUE_STATUS', `0xc05c5340')
define(`SNDRV_SEQ_IOCTL_GET_QUEUE_TEMPO', `0xc02c5341')
define(`SNDRV_SEQ_IOCTL_GET_QUEUE_TIMER', `0xc0605345')
define(`SNDRV_SEQ_IOCTL_GET_SUBSCRIPTION', `0xc0505350')
define(`SNDRV_SEQ_IOCTL_PVERSION', `0x80045300')
define(`SNDRV_SEQ_IOCTL_QUERY_NEXT_CLIENT', `0xc0bc5351')
define(`SNDRV_SEQ_IOCTL_QUERY_NEXT_PORT', `0xc0a85352')
define(`SNDRV_SEQ_IOCTL_QUERY_SUBS', `0xc058534f')
define(`SNDRV_SEQ_IOCTL_REMOVE_EVENTS', `0x4040534e')
define(`SNDRV_SEQ_IOCTL_RUNNING_MODE', `0xc0105303')
define(`SNDRV_SEQ_IOCTL_SET_CLIENT_INFO', `0x40bc5311')
define(`SNDRV_SEQ_IOCTL_SET_CLIENT_POOL', `0x4058534c')
define(`SNDRV_SEQ_IOCTL_SET_PORT_INFO', `0x40a85323')
define(`SNDRV_SEQ_IOCTL_SET_QUEUE_CLIENT', `0x404c534a')
define(`SNDRV_SEQ_IOCTL_SET_QUEUE_INFO', `0xc08c5335')
define(`SNDRV_SEQ_IOCTL_SET_QUEUE_OWNER', `0x40005344')
define(`SNDRV_SEQ_IOCTL_SET_QUEUE_TEMPO', `0x402c5342')
define(`SNDRV_SEQ_IOCTL_SET_QUEUE_TIMER', `0x40605346')
define(`SNDRV_SEQ_IOCTL_SUBSCRIBE_PORT', `0x40505330')
define(`SNDRV_SEQ_IOCTL_SYSTEM_INFO', `0xc0305302')
define(`SNDRV_SEQ_IOCTL_UNSUBSCRIBE_PORT', `0x40505331')
define(`SNDRV_TIMER_IOCTL_CONTINUE', `0x000054a2')
define(`SNDRV_TIMER_IOCTL_GINFO', `0xc0f85403')
define(`SNDRV_TIMER_IOCTL_GPARAMS', `0x40485404')
define(`SNDRV_TIMER_IOCTL_GSTATUS', `0xc0505405')
define(`SNDRV_TIMER_IOCTL_INFO', `0x80e85411')
define(`SNDRV_TIMER_IOCTL_NEXT_DEVICE', `0xc0145401')
define(`SNDRV_TIMER_IOCTL_PARAMS', `0x40505412')
define(`SNDRV_TIMER_IOCTL_PAUSE', `0x000054a3')
define(`SNDRV_TIMER_IOCTL_PVERSION', `0x80045400')
define(`SNDRV_TIMER_IOCTL_SELECT', `0x40345410')
define(`SNDRV_TIMER_IOCTL_START', `0x000054a0')
define(`SNDRV_TIMER_IOCTL_STATUS', `0x80605414')
define(`SNDRV_TIMER_IOCTL_STOP', `0x000054a1')
define(`SNDRV_TIMER_IOCTL_TREAD', `0x40045402')
define(`SONET_CLRDIAG', `0xc0046113')
define(`SONET_GETDIAG', `0x80046114')
define(`SONET_GETFRAMING', `0x80046116')
define(`SONET_GETFRSENSE', `0x80066117')
define(`SONET_GETSTAT', `0x80246110')
define(`SONET_GETSTATZ', `0x80246111')
define(`SONET_SETDIAG', `0xc0046112')
define(`SONET_SETFRAMING', `0x40046115')
define(`SONYPI_IOCGBAT1CAP', `0x80027602')
define(`SONYPI_IOCGBAT1REM', `0x80027603')
define(`SONYPI_IOCGBAT2CAP', `0x80027604')
define(`SONYPI_IOCGBAT2REM', `0x80027605')
define(`SONYPI_IOCGBATFLAGS', `0x80017607')
define(`SONYPI_IOCGBLUE', `0x80017608')
define(`SONYPI_IOCGBRT', `0x80017600')
define(`SONYPI_IOCGFAN', `0x8001760a')
define(`SONYPI_IOCGTEMP', `0x8001760c')
define(`SONYPI_IOCSBLUE', `0x40017609')
define(`SONYPI_IOCSBRT', `0x40017600')
define(`SONYPI_IOCSFAN', `0x4001760b')
define(`SOUND_MIXER_3DSE', `0xc0044d68')
define(`SOUND_MIXER_ACCESS', `0xc0804d66')
define(`SOUND_MIXER_AGC', `0xc0044d67')
define(`SOUND_MIXER_GETLEVELS', `0xc0a44d74')
define(`SOUND_MIXER_INFO', `0x805c4d65')
define(`SOUND_MIXER_PRIVATE1', `0xc0044d6f')
define(`SOUND_MIXER_PRIVATE2', `0xc0044d70')
define(`SOUND_MIXER_PRIVATE3', `0xc0044d71')
define(`SOUND_MIXER_PRIVATE4', `0xc0044d72')
define(`SOUND_MIXER_PRIVATE5', `0xc0044d73')
define(`SOUND_MIXER_SETLEVELS', `0xc0a44d75')
define(`SOUND_OLD_MIXER_INFO', `0x80304d65')
define(`SOUND_PCM_READ_BITS', `0x80045005')
define(`SOUND_PCM_READ_CHANNELS', `0x80045006')
define(`SOUND_PCM_READ_FILTER', `0x80045007')
define(`SOUND_PCM_READ_RATE', `0x80045002')
define(`SOUND_PCM_WRITE_FILTER', `0xc0045007')
define(`SPI_IOC_RD_BITS_PER_WORD', `0x80016b03')
define(`SPI_IOC_RD_LSB_FIRST', `0x80016b02')
define(`SPI_IOC_RD_MAX_SPEED_HZ', `0x80046b04')
define(`SPI_IOC_RD_MODE', `0x80016b01')
define(`SPI_IOC_RD_MODE32', `0x80046b05')
define(`SPI_IOC_WR_BITS_PER_WORD', `0x40016b03')
define(`SPI_IOC_WR_LSB_FIRST', `0x40016b02')
define(`SPI_IOC_WR_MAX_SPEED_HZ', `0x40046b04')
define(`SPI_IOC_WR_MODE', `0x40016b01')
define(`SPI_IOC_WR_MODE32', `0x40046b05')
define(`SPIOCSTYPE', `0x40087101')
define(`SSTFB_GET_VGAPASS', `0x800446dd')
define(`SSTFB_SET_VGAPASS', `0x400446dd')
define(`STOP_ARRAY', `0x00000932')
define(`STOP_ARRAY_RO', `0x00000933')
define(`SW_SYNC_IOC_CREATE_FENCE', `0xc0285700')
define(`SW_SYNC_IOC_INC', `0x40045701')
define(`SYNC_IOC_FENCE_INFO', `0xc0283e02')
define(`SYNC_IOC_MERGE', `0xc0283e01')
define(`SYNC_IOC_WAIT', `0x40043e00')
define(`TCFLSH', `0x0000540b')
define(`TCGETA', `0x00005405')
define(`TCGETS2', `0x802c542a')
define(`TCGETS', ifelse(target_arch, mips, 0x0000540d, 0x00005401))
define(`TCGETX', `0x00005432')
define(`TCSBRK', `0x00005409')
define(`TCSBRKP', `0x00005425')
define(`TCSETA', `0x00005406')
define(`TCSETAF', `0x00005408')
define(`TCSETAW', `0x00005407')
define(`TCSETS', `0x00005402')
define(`TCSETS2', `0x402c542b')
define(`TCSETSF', `0x00005404')
define(`TCSETSF2', `0x402c542d')
define(`TCSETSW', `0x00005403')
define(`TCSETSW2', `0x402c542c')
define(`TCSETX', `0x00005433')
define(`TCSETXF', `0x00005434')
define(`TCSETXW', `0x00005435')
define(`TCXONC', `0x0000540a')
define(`TFD_IOC_SET_TICKS', `0x40085400')
define(`TIOCCBRK', `0x00005428')
define(`TIOCCONS', `0x0000541d')
define(`TIOCEXCL', `0x0000540c')
define(`TIOCGDEV', `0x80045432')
define(`TIOCGETD', `0x00005424')
define(`TIOCGEXCL', `0x80045440')
define(`TIOCGICOUNT', `0x0000545d')
define(`TIOCGLCKTRMIOS', `0x00005456')
define(`TIOCGPGRP', `0x0000540f')
define(`TIOCGPKT', `0x80045438')
define(`TIOCGPTLCK', `0x80045439')
define(`TIOCGPTN', `0x80045430')
define(`TIOCGRS485', `0x0000542e')
define(`TIOCGSERIAL', `0x0000541e')
define(`TIOCGSID', `0x00005429')
define(`TIOCGSOFTCAR', `0x00005419')
define(`TIOCGWINSZ', ifelse(target_arch, mips, 0x80087468, 0x00005413))
define(`TIOCLINUX', `0x0000541c')
define(`TIOCMBIC', `0x00005417')
define(`TIOCMBIS', `0x00005416')
define(`TIOCMGET', `0x00005415')
define(`TIOCMIWAIT', `0x0000545c')
define(`TIOCMSET', `0x00005418')
define(`TIOCNOTTY', `0x00005422')
define(`TIOCNXCL', `0x0000540d')
define(`TIOCOUTQ', ifelse(target_arch, mips, 0x00007472, 0x00005411))
define(`TIOCPKT', `0x00005420')
define(`TIOCSBRK', `0x00005427')
define(`TIOCSCTTY', ifelse(target_arch, mips, 0x00005480, 0x0000540e))
define(`TIOCSERCONFIG', `0x00005453')
define(`TIOCSERGETLSR', `0x00005459')
define(`TIOCSERGETMULTI', `0x0000545a')
define(`TIOCSERGSTRUCT', `0x00005458')
define(`TIOCSERGWILD', `0x00005454')
define(`TIOCSERSETMULTI', `0x0000545b')
define(`TIOCSERSWILD', `0x00005455')
define(`TIOCSETD', `0x00005423')
define(`TIOCSIG', `0x40045436')
define(`TIOCSLCKTRMIOS', `0x00005457')
define(`TIOCSPGRP', `0x00005410')
define(`TIOCSPTLCK', `0x40045431')
define(`TIOCSRS485', `0x0000542f')
define(`TIOCSSERIAL', `0x0000541f')
define(`TIOCSSOFTCAR', `0x0000541a')
define(`TIOCSTI', `0x00005412')
define(`TIOCSWINSZ', ifelse(target_arch, mips, 0x40087467, 0x00005414))
define(`TIOCVHANGUP', `0x00005437')
define(`TOSH_SMM', `0xc0047490')
define(`TUNATTACHFILTER', `0x401054d5')
define(`TUNDETACHFILTER', `0x401054d6')
define(`TUNER_SET_CONFIG', `0x4010645c')
define(`TUNGETFEATURES', `0x800454cf')
define(`TUNGETFILTER', `0x801054db')
define(`TUNGETIFF', `0x800454d2')
define(`TUNGETSNDBUF', `0x800454d3')
define(`TUNGETVNETHDRSZ', `0x800454d7')
define(`TUNGETVNETLE', `0x800454dd')
define(`TUNSETDEBUG', `0x400454c9')
define(`TUNSETGROUP', `0x400454ce')
define(`TUNSETIFF', `0x400454ca')
define(`TUNSETIFINDEX', `0x400454da')
define(`TUNSETLINK', `0x400454cd')
define(`TUNSETNOCSUM', `0x400454c8')
define(`TUNSETOFFLOAD', `0x400454d0')
define(`TUNSETOWNER', `0x400454cc')
define(`TUNSETPERSIST', `0x400454cb')
define(`TUNSETQUEUE', `0x400454d9')
define(`TUNSETSNDBUF', `0x400454d4')
define(`TUNSETTXFILTER', `0x400454d1')
define(`TUNSETVNETHDRSZ', `0x400454d8')
define(`TUNSETVNETLE', `0x400454dc')
define(`UBI_IOCATT', `0x40186f40')
define(`UBI_IOCDET', `0x40046f41')
define(`UBI_IOCEBCH', `0x40044f02')
define(`UBI_IOCEBER', `0x40044f01')
define(`UBI_IOCEBISMAP', `0x80044f05')
define(`UBI_IOCEBMAP', `0x40084f03')
define(`UBI_IOCEBUNMAP', `0x40044f04')
define(`UBI_IOCMKVOL', `0x40986f00')
define(`UBI_IOCRMVOL', `0x40046f01')
define(`UBI_IOCRNVOL', `0x51106f03')
define(`UBI_IOCRSVOL', `0x400c6f02')
define(`UBI_IOCSETVOLPROP', `0x40104f06')
define(`UBI_IOCVOLCRBLK', `0x40804f07')
define(`UBI_IOCVOLRMBLK', `0x00004f08')
define(`UBI_IOCVOLUP', `0x40084f00')
define(`UDF_GETEABLOCK', `0x80086c41')
define(`UDF_GETEASIZE', `0x80046c40')
define(`UDF_GETVOLIDENT', `0x80086c42')
define(`UDF_RELOCATE_BLOCKS', `0xc0086c43')
define(`UI_BEGIN_FF_ERASE', `0xc00c55ca')
define(`UI_BEGIN_FF_UPLOAD', `0xc06855c8')
define(`UI_DEV_CREATE', `0x00005501')
define(`UI_DEV_DESTROY', `0x00005502')
define(`UI_END_FF_ERASE', `0x400c55cb')
define(`UI_END_FF_UPLOAD', `0x406855c9')
define(`UI_GET_VERSION', `0x8004552d')
define(`UI_SET_ABSBIT', `0x40045567')
define(`UI_SET_EVBIT', `0x40045564')
define(`UI_SET_FFBIT', `0x4004556b')
define(`UI_SET_KEYBIT', `0x40045565')
define(`UI_SET_LEDBIT', `0x40045569')
define(`UI_SET_MSCBIT', `0x40045568')
define(`UI_SET_PHYS', `0x4008556c')
define(`UI_SET_PROPBIT', `0x4004556e')
define(`UI_SET_RELBIT', `0x40045566')
define(`UI_SET_SNDBIT', `0x4004556a')
define(`UI_SET_SWBIT', `0x4004556d')
define(`UNPROTECT_ARRAY', `0x00000926')
define(`USBDEVFS_ALLOC_STREAMS', `0x8008551c')
define(`USBDEVFS_BULK', `0xc0185502')
define(`USBDEVFS_BULK32', `0xc0105502')
define(`USBDEVFS_CLAIMINTERFACE', `0x8004550f')
define(`USBDEVFS_CLAIM_PORT', `0x80045518')
define(`USBDEVFS_CLEAR_HALT', `0x80045515')
define(`USBDEVFS_CONNECT', `0x00005517')
define(`USBDEVFS_CONNECTINFO', `0x40085511')
define(`USBDEVFS_CONTROL', `0xc0185500')
define(`USBDEVFS_CONTROL32', `0xc0105500')
define(`USBDEVFS_DISCARDURB', `0x0000550b')
define(`USBDEVFS_DISCONNECT', `0x00005516')
define(`USBDEVFS_DISCONNECT_CLAIM', `0x8108551b')
define(`USBDEVFS_DISCSIGNAL', `0x8010550e')
define(`USBDEVFS_DISCSIGNAL32', `0x8008550e')
define(`USBDEVFS_FREE_STREAMS', `0x8008551d')
define(`USBDEVFS_GET_CAPABILITIES', `0x8004551a')
define(`USBDEVFS_GETDRIVER', `0x41045508')
define(`USBDEVFS_HUB_PORTINFO', `0x80805513')
define(`USBDEVFS_IOCTL', `0xc0105512')
define(`USBDEVFS_IOCTL32', `0xc00c5512')
define(`USBDEVFS_REAPURB', `0x4008550c')
define(`USBDEVFS_REAPURB32', `0x4004550c')
define(`USBDEVFS_REAPURBNDELAY', `0x4008550d')
define(`USBDEVFS_REAPURBNDELAY32', `0x4004550d')
define(`USBDEVFS_RELEASEINTERFACE', `0x80045510')
define(`USBDEVFS_RELEASE_PORT', `0x80045519')
define(`USBDEVFS_RESET', `0x00005514')
define(`USBDEVFS_RESETEP', `0x80045503')
define(`USBDEVFS_SETCONFIGURATION', `0x80045505')
define(`USBDEVFS_SETINTERFACE', `0x80085504')
define(`USBDEVFS_SUBMITURB', `0x8038550a')
define(`USBDEVFS_SUBMITURB32', `0x802a550a')
define(`USBTMC_IOCTL_ABORT_BULK_IN', `0x00005b04')
define(`USBTMC_IOCTL_ABORT_BULK_OUT', `0x00005b03')
define(`USBTMC_IOCTL_CLEAR', `0x00005b02')
define(`USBTMC_IOCTL_CLEAR_IN_HALT', `0x00005b07')
define(`USBTMC_IOCTL_CLEAR_OUT_HALT', `0x00005b06')
define(`USBTMC_IOCTL_INDICATOR_PULSE', `0x00005b01')
define(`UVCIOC_CTRL_MAP', `0xc0607520')
define(`UVCIOC_CTRL_QUERY', `0xc0107521')
define(`V4L2_SUBDEV_IR_RX_NOTIFY', `0x40047600')
define(`V4L2_SUBDEV_IR_TX_NOTIFY', `0x40047601')
define(`VFAT_IOCTL_READDIR_BOTH', `0x82307201')
define(`VFAT_IOCTL_READDIR_SHORT', `0x82307202')
define(`VFIO_CHECK_EXTENSION', `0x00003b65')
define(`VFIO_DEVICE_GET_INFO', `0x00003b6b')
define(`VFIO_DEVICE_GET_IRQ_INFO', `0x00003b6d')
define(`VFIO_DEVICE_GET_PCI_HOT_RESET_INFO', `0x00003b70')
define(`VFIO_DEVICE_GET_REGION_INFO', `0x00003b6c')
define(`VFIO_DEVICE_PCI_HOT_RESET', `0x00003b71')
define(`VFIO_DEVICE_RESET', `0x00003b6f')
define(`VFIO_DEVICE_SET_IRQS', `0x00003b6e')
define(`VFIO_EEH_PE_OP', `0x00003b79')
define(`VFIO_GET_API_VERSION', `0x00003b64')
define(`VFIO_GROUP_GET_DEVICE_FD', `0x00003b6a')
define(`VFIO_GROUP_GET_STATUS', `0x00003b67')
define(`VFIO_GROUP_SET_CONTAINER', `0x00003b68')
define(`VFIO_GROUP_UNSET_CONTAINER', `0x00003b69')
define(`VFIO_IOMMU_DISABLE', `0x00003b74')
define(`VFIO_IOMMU_ENABLE', `0x00003b73')
define(`VFIO_IOMMU_GET_INFO', `0x00003b70')
define(`VFIO_IOMMU_MAP_DMA', `0x00003b71')
define(`VFIO_IOMMU_SPAPR_TCE_GET_INFO', `0x00003b70')
define(`VFIO_IOMMU_UNMAP_DMA', `0x00003b72')
define(`VFIO_SET_IOMMU', `0x00003b66')
define(`VHOST_GET_FEATURES', `0x8008af00')
define(`VHOST_GET_VRING_BASE', `0xc008af12')
define(`VHOST_NET_SET_BACKEND', `0x4008af30')
define(`VHOST_RESET_OWNER', `0x0000af02')
define(`VHOST_SCSI_CLEAR_ENDPOINT', `0x40e8af41')
define(`VHOST_SCSI_GET_ABI_VERSION', `0x4004af42')
define(`VHOST_SCSI_GET_EVENTS_MISSED', `0x4004af44')
define(`VHOST_SCSI_SET_ENDPOINT', `0x40e8af40')
define(`VHOST_SCSI_SET_EVENTS_MISSED', `0x4004af43')
define(`VHOST_SET_FEATURES', `0x4008af00')
define(`VHOST_SET_LOG_BASE', `0x4008af04')
define(`VHOST_SET_LOG_FD', `0x4004af07')
define(`VHOST_SET_MEM_TABLE', `0x4008af03')
define(`VHOST_SET_OWNER', `0x0000af01')
define(`VHOST_SET_VRING_ADDR', `0x4028af11')
define(`VHOST_SET_VRING_BASE', `0x4008af12')
define(`VHOST_SET_VRING_CALL', `0x4008af21')
define(`VHOST_SET_VRING_ERR', `0x4008af22')
define(`VHOST_SET_VRING_KICK', `0x4008af20')
define(`VHOST_SET_VRING_NUM', `0x4008af10')
define(`VIDEO_CLEAR_BUFFER', `0x00006f22')
define(`VIDEO_COMMAND', `0xc0486f3b')
define(`VIDEO_CONTINUE', `0x00006f18')
define(`VIDEO_FAST_FORWARD', `0x00006f1f')
define(`VIDEO_FREEZE', `0x00006f17')
define(`VIDEO_GET_CAPABILITIES', `0x80046f21')
define(`VIDEO_GET_EVENT', `0x80206f1c')
define(`VIDEO_GET_FRAME_COUNT', `0x80086f3a')
define(`VIDEO_GET_FRAME_RATE', `0x80046f38')
define(`VIDEO_GET_NAVI', `0x84046f34')
define(`VIDEO_GET_PTS', `0x80086f39')
define(`VIDEO_GET_SIZE', `0x800c6f37')
define(`VIDEO_GET_STATUS', `0x80146f1b')
define(`VIDEO_PLAY', `0x00006f16')
define(`VIDEO_SELECT_SOURCE', `0x00006f19')
define(`VIDEO_SET_ATTRIBUTES', `0x00006f35')
define(`VIDEO_SET_BLANK', `0x00006f1a')
define(`VIDEO_SET_DISPLAY_FORMAT', `0x00006f1d')
define(`VIDEO_SET_FORMAT', `0x00006f25')
define(`VIDEO_SET_HIGHLIGHT', `0x40106f27')
define(`VIDEO_SET_ID', `0x00006f23')
define(`VIDEO_SET_SPU', `0x40086f32')
define(`VIDEO_SET_SPU_PALETTE', `0x40106f33')
define(`VIDEO_SET_STREAMTYPE', `0x00006f24')
define(`VIDEO_SET_SYSTEM', `0x00006f26')
define(`VIDEO_SLOWMOTION', `0x00006f20')
define(`VIDEO_STILLPICTURE', `0x40106f1e')
define(`VIDEO_STOP', `0x00006f15')
define(`VIDEO_TRY_COMMAND', `0xc0486f3c')
define(`VIDIOC_CREATE_BUFS', `0xc100565c')
define(`VIDIOC_CROPCAP', `0xc02c563a')
define(`VIDIOC_DBG_G_CHIP_INFO', `0xc0c85666')
define(`VIDIOC_DBG_G_REGISTER', `0xc0385650')
define(`VIDIOC_DBG_S_REGISTER', `0x4038564f')
define(`VIDIOC_DECODER_CMD', `0xc0485660')
define(`VIDIOC_DQBUF', `0xc0585611')
define(`VIDIOC_DQEVENT', `0x80885659')
define(`VIDIOC_DV_TIMINGS_CAP', `0xc0905664')
define(`VIDIOC_ENCODER_CMD', `0xc028564d')
define(`VIDIOC_ENUMAUDIO', `0xc0345641')
define(`VIDIOC_ENUMAUDOUT', `0xc0345642')
define(`VIDIOC_ENUM_DV_TIMINGS', `0xc0945662')
define(`VIDIOC_ENUM_FMT', `0xc0405602')
define(`VIDIOC_ENUM_FRAMEINTERVALS', `0xc034564b')
define(`VIDIOC_ENUM_FRAMESIZES', `0xc02c564a')
define(`VIDIOC_ENUM_FREQ_BANDS', `0xc0405665')
define(`VIDIOC_ENUMINPUT', `0xc050561a')
define(`VIDIOC_ENUMOUTPUT', `0xc0485630')
define(`VIDIOC_ENUMSTD', `0xc0485619')
define(`VIDIOC_EXPBUF', `0xc0405610')
define(`VIDIOC_G_AUDIO', `0x80345621')
define(`VIDIOC_G_AUDOUT', `0x80345631')
define(`VIDIOC_G_CROP', `0xc014563b')
define(`VIDIOC_G_CTRL', `0xc008561b')
define(`VIDIOC_G_DV_TIMINGS', `0xc0845658')
define(`VIDIOC_G_EDID', `0xc0285628')
define(`VIDIOC_G_ENC_INDEX', `0x8818564c')
define(`VIDIOC_G_EXT_CTRLS', `0xc0205647')
define(`VIDIOC_G_FBUF', `0x8030560a')
define(`VIDIOC_G_FMT', `0xc0d05604')
define(`VIDIOC_G_FREQUENCY', `0xc02c5638')
define(`VIDIOC_G_INPUT', `0x80045626')
define(`VIDIOC_G_JPEGCOMP', `0x808c563d')
define(`VIDIOC_G_MODULATOR', `0xc0445636')
define(`VIDIOC_G_OUTPUT', `0x8004562e')
define(`VIDIOC_G_PARM', `0xc0cc5615')
define(`VIDIOC_G_PRIORITY', `0x80045643')
define(`VIDIOC_G_SELECTION', `0xc040565e')
define(`VIDIOC_G_SLICED_VBI_CAP', `0xc0745645')
define(`VIDIOC_G_STD', `0x80085617')
define(`VIDIOC_G_TUNER', `0xc054561d')
define(`VIDIOC_INT_RESET', `0x40046466')
define(`VIDIOC_LOG_STATUS', `0x00005646')
define(`VIDIOC_OMAP3ISP_AEWB_CFG', `0xc02056c3')
define(`VIDIOC_OMAP3ISP_AF_CFG', `0xc04c56c5')
define(`VIDIOC_OMAP3ISP_CCDC_CFG', `0xc03856c1')
define(`VIDIOC_OMAP3ISP_HIST_CFG', `0xc03056c4')
define(`VIDIOC_OMAP3ISP_PRV_CFG', `0xc07056c2')
define(`VIDIOC_OMAP3ISP_STAT_EN', `0xc00856c7')
define(`VIDIOC_OMAP3ISP_STAT_REQ', `0xc02856c6')
define(`VIDIOC_OVERLAY', `0x4004560e')
define(`VIDIOC_PREPARE_BUF', `0xc058565d')
define(`VIDIOC_QBUF', `0xc058560f')
define(`VIDIOC_QUERYBUF', `0xc0585609')
define(`VIDIOC_QUERYCAP', `0x80685600')
define(`VIDIOC_QUERYCTRL', `0xc0445624')
define(`VIDIOC_QUERY_DV_TIMINGS', `0x80845663')
define(`VIDIOC_QUERY_EXT_CTRL', `0xc0e85667')
define(`VIDIOC_QUERYMENU', `0xc02c5625')
define(`VIDIOC_QUERYSTD', `0x8008563f')
define(`VIDIOC_REQBUFS', `0xc0145608')
define(`VIDIOC_RESERVED', `0x00005601')
define(`VIDIOC_S_AUDIO', `0x40345622')
define(`VIDIOC_S_AUDOUT', `0x40345632')
define(`VIDIOC_S_CROP', `0x4014563c')
define(`VIDIOC_S_CTRL', `0xc008561c')
define(`VIDIOC_S_DV_TIMINGS', `0xc0845657')
define(`VIDIOC_S_EDID', `0xc0285629')
define(`VIDIOC_S_EXT_CTRLS', `0xc0205648')
define(`VIDIOC_S_FBUF', `0x4030560b')
define(`VIDIOC_S_FMT', `0xc0d05605')
define(`VIDIOC_S_FREQUENCY', `0x402c5639')
define(`VIDIOC_S_HW_FREQ_SEEK', `0x40305652')
define(`VIDIOC_S_INPUT', `0xc0045627')
define(`VIDIOC_S_JPEGCOMP', `0x408c563e')
define(`VIDIOC_S_MODULATOR', `0x40445637')
define(`VIDIOC_S_OUTPUT', `0xc004562f')
define(`VIDIOC_S_PARM', `0xc0cc5616')
define(`VIDIOC_S_PRIORITY', `0x40045644')
define(`VIDIOC_S_SELECTION', `0xc040565f')
define(`VIDIOC_S_STD', `0x40085618')
define(`VIDIOC_STREAMOFF', `0x40045613')
define(`VIDIOC_STREAMON', `0x40045612')
define(`VIDIOC_S_TUNER', `0x4054561e')
define(`VIDIOC_SUBDEV_DV_TIMINGS_CAP', `0xc0905664')
define(`VIDIOC_SUBDEV_ENUM_DV_TIMINGS', `0xc0945662')
define(`VIDIOC_SUBDEV_ENUM_FRAME_INTERVAL', `0xc040564b')
define(`VIDIOC_SUBDEV_ENUM_FRAME_SIZE', `0xc040564a')
define(`VIDIOC_SUBDEV_ENUM_MBUS_CODE', `0xc0305602')
define(`VIDIOC_SUBDEV_G_CROP', `0xc038563b')
define(`VIDIOC_SUBDEV_G_DV_TIMINGS', `0xc0845658')
define(`VIDIOC_SUBDEV_G_EDID', `0xc0285628')
define(`VIDIOC_SUBDEV_G_FMT', `0xc0585604')
define(`VIDIOC_SUBDEV_G_FRAME_INTERVAL', `0xc0305615')
define(`VIDIOC_SUBDEV_G_SELECTION', `0xc040563d')
define(`VIDIOC_SUBDEV_QUERY_DV_TIMINGS', `0x80845663')
define(`VIDIOC_SUBDEV_S_CROP', `0xc038563c')
define(`VIDIOC_SUBDEV_S_DV_TIMINGS', `0xc0845657')
define(`VIDIOC_SUBDEV_S_EDID', `0xc0285629')
define(`VIDIOC_SUBDEV_S_FMT', `0xc0585605')
define(`VIDIOC_SUBDEV_S_FRAME_INTERVAL', `0xc0305616')
define(`VIDIOC_SUBDEV_S_SELECTION', `0xc040563e')
define(`VIDIOC_SUBSCRIBE_EVENT', `0x4020565a')
define(`VIDIOC_TRY_DECODER_CMD', `0xc0485661')
define(`VIDIOC_TRY_ENCODER_CMD', `0xc028564e')
define(`VIDIOC_TRY_EXT_CTRLS', `0xc0205649')
define(`VIDIOC_TRY_FMT', `0xc0d05640')
define(`VIDIOC_UNSUBSCRIBE_EVENT', `0x4020565b')
define(`VIDIOC_VSP1_LUT_CONFIG', `0xc40056c1')
define(`VPFE_CMD_S_CCDC_RAW_PARAMS', `0x400856c1')
define(`VT_ACTIVATE', `0x00005606')
define(`VT_DISALLOCATE', `0x00005608')
define(`VT_GETHIFONTMASK', `0x0000560d')
define(`VT_GETMODE', `0x00005601')
define(`VT_GETSTATE', `0x00005603')
define(`VT_LOCKSWITCH', `0x0000560b')
define(`VT_OPENQRY', `0x00005600')
define(`VT_RELDISP', `0x00005605')
define(`VT_RESIZE', `0x00005609')
define(`VT_RESIZEX', `0x0000560a')
define(`VT_SENDSIG', `0x00005604')
define(`VT_SETACTIVATE', `0x0000560f')
define(`VT_SETMODE', `0x00005602')
define(`VT_UNLOCKSWITCH', `0x0000560c')
define(`VT_WAITACTIVE', `0x00005607')
define(`VT_WAITEVENT', `0x0000560e')
define(`WAN_IOC_ADD_FLT_INDEX', `0x00006902')
define(`WAN_IOC_ADD_FLT_RULE', `0x00006900')
define(`WDIOC_GETBOOTSTATUS', `0x80045702')
define(`WDIOC_GETPRETIMEOUT', `0x80045709')
define(`WDIOC_GETSTATUS', `0x80045701')
define(`WDIOC_GETSUPPORT', `0x80285700')
define(`WDIOC_GETTEMP', `0x80045703')
define(`WDIOC_GETTIMELEFT', `0x8004570a')
define(`WDIOC_GETTIMEOUT', `0x80045707')
define(`WDIOC_KEEPALIVE', `0x80045705')
define(`WDIOC_SETOPTIONS', `0x80045704')
define(`WDIOC_SETPRETIMEOUT', `0xc0045708')
define(`WDIOC_SETTIMEOUT', `0xc0045706')
define(`WRITE_RAID_INFO', `0x00000925')
define(`X86_IOC_RDMSR_REGS', `0xc02063a0')
define(`X86_IOC_WRMSR_REGS', `0xc02063a1')
define(`ZATM_GETPOOL', `0x40106161')
define(`ZATM_GETPOOLZ', `0x40106162')
define(`ZATM_SETPOOL', `0x40106163')
